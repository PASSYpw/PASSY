"use strict";var passy=function(){function e(e,a,s,n){return e?(s||(s=function(){t("There has been a problem with the server. Please try again later.")}),n||(n={}),n.url="action.php",n.method="POST",n.data=e,n.success=function(e,s,n){if(!e.success)switch(e.msg){case"not_authenticated":return void d();case"database_error":return void t("There has been a problem with the database. Please try again later.")}a(e,s,n)},n.error=function(e,t,a){s(e,t,a)},$.ajax(n)):null}function t(e,t,s,n){var i=$('<div class="snackbar"></div>');t||(t="Dismiss");var r=setTimeout(function(){a(i)},5e3);s||(s=function(){clearTimeout(r),a(i)}),n||(n="primary");var o=$('<button class="btn btn-'+n+' btn-flat">'+t+"</button>");i.append('<span class="snackbar-text">'+e+"</span>"),i.append(o),o.on("click",s),$("body").append(i),setTimeout(function(){i.addClass("snackbar-show"),i.css({bottom:"-"+i.outerHeight()+"px"}),setTimeout(function(){var e=v++*(i.outerHeight()+10)+20;i.css({bottom:e+"px"})},1)},1)}function a(e){e.removeClass("snackbar-show"),e.css({bottom:"-"+e.outerHeight()+"px"}),e.on("transitionend webkitTransitionEnd oTransitionEnd",function(){e.off("transitionend webkitTransitionEnd oTransitionEnd"),e.remove(),v--})}function s(){$("body").hasClass("modal-open")&&$(".modal.fade.in").modal("hide")}function n(e){for(var t="abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789",a="",s=0;s<e;s++){var n=0===s||s===e?t:t+"@#$%_-";a+=n.charAt(function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1;return Math.floor(Math.random()*e)}(n.length))}return a}function i(a,n,i){if(!f){f=!0;var r=$("#page_"+h),o=$("#page_"+a),d=$(".load-spinner");h=a,function(e){p=e,$("*[data-page-scope]").each(function(t,a){var s=$(a);s.data("page-scope")!==e?s.hide():s.show()})}(o.attr("data-apply-page-scope")),s(),d.addClass("shown"),$("*[data-page-highlight]").each(function(e,t){var s=$(t);s.attr("data-page-highlight")!==a&&s.removeClass("active")});var c=function(){$("*[data-page-highlight]").each(function(e,t){var s=$(t);s.attr("data-page-highlight")===a&&s.addClass("active")}),!1!==i&&history.pushState({page:h,scope:p},"PASSY","#!p="+h),d.removeClass("shown"),o.fadeIn(300),f=!1,n&&n()};r.fadeOut(300,function(){"password_list"===a||"archived_password_list"===a?function(a){var s=$("#tbodyPasswords"),n=$("#tbodyArchivedPasswords");e("a=password/queryAll",function(e){var i="",r="";e.success?$.each(e.data,function(e,t){var a=t.description.raw?t.description.safe:"<i>None</i>",s=t.username.raw?t.username.safe:"<i>None</i>";if(t.archived){var n="<tr data-visible='true' id='"+t.password_id+"'>";n+="<td><span class='force-select no-contextmenu'> "+s+"</span></td>",n+="<td><button class='btn btn-default btn-flat btn-block' disabled='disabled'><i class='material-icons'>remove_red_eye</i></button></td>",n+="<td >"+a+"</td>",n+="<td>"+t.date_archived.pretty+"</td>",n+="<td><button class='btn btn-default btn-flat btn-sm' data-password-action='restore' data-password-id='"+t.password_id+"'><i class='material-icons'>unarchive</i></button><a class='btn btn-default btn-flat btn-sm' data-password-action='delete' data-password-id='"+t.password_id+"'><i class='material-icons'>delete</i></a></td>",r+=n+="</tr>"}else{var o="<tr data-copy-password data-password-id='"+t.password_id+"' data-visible='true' id='"+t.password_id+"'>";o+="<td><span class='force-select no-contextmenu'>"+s+"</span></td>",o+="<td><button class='btn btn-default btn-flat btn-block' data-password-action='show' data-password-id='"+t.password_id+"'><i class='material-icons'>remove_red_eye</i></button></td>",o+="<td>"+a+"</td>",o+="<td>"+t.date_added.pretty+"</td>",o+="<td><button class='btn btn-default btn-flat btn-sm' data-password-action='edit' data-password-id='"+t.password_id+"'><i class='material-icons'>edit</i></button><button class='btn btn-default btn-flat btn-sm' data-password-action='archive' data-password-id='"+t.password_id+"'><i class='material-icons'>archive</i></button></td>",i+=o+="</tr>"}}):t("There has been a problem with the server. Please try again later"),s.html(i),n.html(r),a&&a(e.msg)},function(){s.html(""),t("There has been a problem with the server. Please try again later"),a&&a(!1)})}(c):"login_history"===a?function(a){var s=$("#tbodyLoginHistory");e("a=iplog/queryAll",function(e){var n="";if(e.success){var i=e.data;$.each(i,function(e,t){var a="<tr>";a+="<td><span>"+t.ip+"</span></td>",a+="<td><span>"+t.user_agent+"</span></td>",a+="<td><span>"+t.date.pretty+"</span></td>",n+=a+="</tr>"})}else t("There has been a problem with the server. Please try again later");s.html(n),a&&a()},function(){s.html(""),t("There has been a problem with the server. Please try again later"),a&&a(!1)})}(c):"user_settings"===a?l(function(){if(m){var e=$("#btn2faSetupModalToggle"),t=$("#btn2faDisableModalToggle"),a=$("#text_2fa_status"),s=$("#page_user_settings_form_change_password"),n=$("#page_user_settings_alert_change_password_disabled");m.two_factor.enabled?(a.html("Enabled"),a.removeClass("text-danger"),a.addClass("text-success"),e.hide(),e.attr("disabled",""),t.show(),t.attr("disabled",null),s.hide(),n.show()):(a.html("Disabled"),a.removeClass("text-success"),a.addClass("text-danger"),e.show(),e.attr("disabled",null),t.hide(),t.attr("disabled",""),s.show(),n.hide())}c()}):c()})}}function r(e){i(h,e,!1)}function o(){e("a=user/logout",function(){t("You have been logged out!"),i("login")})}function d(){t("Your session has expired!"),f=!1,i("login",function(){history.replaceState({page:h,scope:p},"PASSY","#!p="+h)},!1)}function l(t){e("a=status",function(e){e.success?$("#modal_connection_lost").modal("hide"):c(),m=e.data,t&&t(e)},function(){c()})}function c(){$("#modal_connection_lost").modal("show")}function u(){var a=$("#tbodyPasswords"),d=$("#tbodyArchivedPasswords"),l=$(".text > input"),c=$("#dropdownContextMenu");$.waves(".nav > li > a"),$.waves(".btn:not([disabled])"),$.waves(".btn-input:not([disabled])"),l.each(function(e,t){var a=$(t);a.val().length>0&&a.addClass("hastext")}),l.change(function(){var e=$(this);e.val().length>0?e.addClass("hastext"):e.removeClass("hastext")}),$("*[data-random-value]").click(function(){var e=$(this),t=$(e.data("random-value"));t.val(n(20)),t.attr("type","text"),t.change()}),$("*[data-next='tab']").click(function(e){e.preventDefault();var t=$(this);$(t.data("target")+" > .active").next("li").find("a").trigger("click")}),$("*[data-hide]").click(function(){var e=$(this);$(e.data("hide")).hide()}),$("*[data-show]").click(function(){var e=$(this);$(e.data("show")).show()}),$("*[data-submit]").click(function(){var e=$(this),t=$(e.data("submit"));t.data("submit-btn",e),t.submit()}),$("input[data-search-in]").on("keyup",function(){console.log("change");var e=$(this),t=e.val(),a=$(e.attr("data-search-in"));a.is("table")&&(a=a.find("tbody")),a.children("tr").each(function(e,a){var s=$(a),n="true"===s.attr("data-visible"),i=s.children(0).text(),r=s.children(2).text();"None"!==i&&-1!==i.indexOf(t)||"None"!==r&&-1!==r.indexOf(t)?n||(s.show(),s.attr("data-visible","true")):n&&(s.hide(),s.attr("data-visible","false"))})});var u=100;$(".dropdown-menu").find("li").each(function(e,t){$(t).css({"animation-delay":u+"ms"}),u+=25});var f=0,m=$(".navbar-fixed-top");$(window).scroll(function(){$(".dropdown.open").find(".dropdown-toggle").dropdown("toggle"),$(".contextmenu.open").removeClass("open");var e=$(document).scrollTop(),t=m.children().first().outerHeight();e<t&&(m.css({transform:"translateY(-"+e+"px)"}),f=e),e>=t&&m.css({transform:"translateY(-"+t+"px)"})}),$(window).focus(function(){var e=$(".content");(b.fade_on_focus_loss||e.hasClass("content-hidden"))&&e.removeClass("content-hidden")}).blur(function(){b.fade_on_focus_loss&&0===$("iframe:hover").length&&$(".content").addClass("content-hidden")}),$(document).on("keydown",function(e){116===(e.which||e.keyCode)&&(e.preventDefault(),e.shiftKey?location.reload(!0):r())}),$(document).on("mouseup",function(e){1===e.which&&c.removeClass("open")}),$(document).on("contextmenu",function(e){if(!e.shiftKey){var t=e.clientX,a=e.clientY,s=$(document.elementFromPoint(t,a));s.hasClass("no-contextmenu")||s.parents(".no-contextmenu").length>0||s.is("input")||s.is("textarea")||s.is("select")||(e.preventDefault(),c.removeClass("open"),setTimeout(function(){c.css({transform:"translate("+t+"px, "+a+"px)"}),c.addClass("open")},10))}}),$("*[data-to-page]").click(function(e){var t=$(this).attr("data-to-page");e.preventDefault(),"refresh"===t&&(t=h),i(t)}),$(window).on("popstate",function(e){console.log(e);var t=e.originalEvent.state;p===t.scope?i(t.page,null,!1):(history.replaceState({page:h,scope:p},"PASSY","#!p="+h),e.preventDefault())}),$("#page_user_settings_form_import").submit(function(e){e.preventDefault();var a=$(this),s=new FormData;s.append("a","misc/import");a.find('input[name="with-pass"]')[0].checked&&(s.append("with-pass","on"),s.append("pass",a.find('input[name="pass"]').val())),$.each($("#import-file")[0].files,function(e,t){s.append("parse-file",t)}),$.ajax({url:"action.php",type:"POST",cache:!1,contentType:!1,processData:!1,data:s,success:function(e){e.success?(t(0===e.data.imported?"Nothing has been imported.":"The import was successful."),setTimeout(function(){i("password_list")},800)):t("There has been a problem with the server. Please try again later")}})}),$("#page_user_settings_form_2fa_setup").submit(function(t){var a=$(this);t.preventDefault();var s=a.parent().parent().parent().parent().parent().find("button");s.attr("disabled",""),e(a.serialize(),function(e){s.attr("disabled",null),e.success&&(a[0].reset(),a.find("input.hastext").change(),$("#tab_2fa").find("a:last").click(),r())})}),$("#page_login_form_login").submit(function(a){var s=$(this);a.preventDefault();var n=s.serialize();s.find("input").attr("disabled","disabled"),s.find("button").attr("disabled","disabled"),e(n,function(e){var a=$("#page_login_modal_2fa"),n=!0;if(e.success)i("password_list"),a.find("input").attr("disabled","");else switch(e.msg){case"already_logged_in":i("password_list");break;case"invalid_credentials":t("The entered credentials do not match any account.");break;case"two_factor_needed":a.find("input").attr("disabled",null),a.modal("show"),n=!1;break;case"invalid_code":t("The entered two-factor-authentication code is invalid!"),a.find("input").attr("disabled",null),n=!1;break;case"invalid_username":t("The username is too short.");break;case"invalid_password":t("The password is too short.")}n&&s[0].reset(),s.find("input").change(),s.find("input").not(".modal input").attr("disabled",null),s.find("button").attr("disabled",null)},function(){t("There has been a problem with the server."),s[0].reset(),s.find("input").change(),s.find("input").attr("disabled",null),s.find("button").attr("disabled",null)})}),$("#page_register_form_register").submit(function(a){a.preventDefault();var s=$(this),n=s.serialize();s.find("input").attr("disabled","disabled"),s.find("button").attr("disabled","disabled"),e(n,function(e){if(e.success)i("login"),t("Your account has been created. You may log in.");else switch(e.msg){case"already_logged_in":i("password_list");break;case"passwords_not_matching":t("The entered passwords do not match.");break;case"recaptcha_fail":t("Captcha could not be verified.");break;case"username_exists":t("The username is occupied.");break;case"invalid_username":t("The username is too short.");break;case"invalid_password":t("The password is too short.")}s[0].reset(),s.find("input").change(),s.find("input").attr("disabled",null),s.find("button").attr("disabled",null),grecaptcha||grecaptcha.reset()},function(){t("There has been a problem with the server."),s[0].reset(),s.find("input").change(),s.find("input").attr("disabled",null),s.find("button").attr("disabled",null),grecaptcha||grecaptcha.reset()})}),$("#page_password_list_form_add").submit(function(a){a.preventDefault();var n=$(this),i=n.find("button");i.attr("disabled",""),e(n.serialize(),function(e){i.attr("disabled",null),e.success?(n[0].reset(),n.find("input.hastext").removeClass("hastext"),r(),s()):t("There has been a problem with the server. Please try again later")})}),$("#page_password_list_form_edit").submit(function(a){a.preventDefault();var n=$(this),i=n.find("button");i.attr("disabled",""),e(n.serialize(),function(e){i.attr("disabled",null),e.success?(n[0].reset(),n.find("input").change(),r(),s()):t("There has been a problem with the server. Please try again later")})}),$("#page_user_settings_form_change_password").submit(function(a){a.preventDefault();var s=$(this),n=s.find("button");n.attr("disabled",""),e(s.serialize(),function(e){n.attr("disabled",null),e.success?(s[0].reset(),s.find("input").change(),o()):t("invalid_credentials"===e.msg?"Your current password is not correct.":"passwords_not_matching"===e.msg?"Your new passwords do not match.":"There has been a problem with the server. Please try again later")})}),$("#page_user_settings_form_2fa_disable").submit(function(a){var n=$(this),i=n.data("submit-btn");a.preventDefault(),i.attr("disabled",""),e(n.serialize(),function(e){i.attr("disabled",null),e.success?(n[0].reset(),n.find("input").change(),t("Two-factor-authentication has been disabled!"),r(),s()):t("invalid_code"===e.msg?"The entered two-factor-authentication code is invalid!":"There has been a problem with the server. Please try again later")})}),$("#page_user_settings_form_change_username").submit(function(a){a.preventDefault();var s=$(this),n=s.find("button");n.attr("disabled",""),e(s.serialize(),function(e){n.attr("disabled",null),e.success?(s[0].reset(),s.find("input").change(),o()):t("username_exists"===e.msg?"The username is occupied.":"invalid_credentials"===e.msg?"Your current password is not correct.":"There has been a problem with the server. Please try again later")})}),$("#btnLogout").click(function(e){e.preventDefault(),o()}),a.on("click",'*[data-password-action="show"]',function(a){var s=$(this),n=s.data("password-id"),i=s.parent();a.preventDefault(),s.attr("disabled",""),s.html(g),e("a=password/query&id="+encodeURIComponent(n),function(e){e.success?(i.html("<span class='force-select no-contextmenu'>"+e.data.password.safe+"</span>"),function(e,t){e.append("&nbsp;<span id='timeLeft_"+t+"' class='text-muted'></span>");var a=60,s=e.find("#timeLeft_"+t),n=function(){s.html(a),10===a?(s.addClass("text-danger"),s.removeClass("text-muted")):0===a&&(clearInterval(i),e.html("<button class='btn btn-default btn-flat btn-block' data-password-action='show' data-password-id='"+t+"'><i class='material-icons'>remove_red_eye</i></button>")),a--};n();var i=setInterval(n,1e3)}(i,n)):(s.html("<i class='material-icons'>error</i>"),t("There has been a problem with the server. Please try again later"))},function(){s.html("<i class='material-icons'>error</i>"),t("There has been a problem with the server. Please try again later")})}),a.on("click",'*[data-password-action="copy"]',function(a){var s=$(this),n=s.data("password-id");a.preventDefault(),s.attr("disabled",""),s.html(g),e("a=password/query&id="+encodeURIComponent(n),function(e){e.success?(!function(e){var t=$("<input>");$("body").append(t),t.val(e).select(),document.execCommand("copy"),t.remove()}(e.data.password.raw),s.attr("disabled",null),s.html("<i class='material-icons'>content_copy</i>")):(s.html("<i class='material-icons'>error</i>"),t("There has been a problem with the server. Please try again later"))},function(){s.html("<i class='material-icons'>error</i>"),t("There has been a problem with the server. Please try again later")})}),a.on("click",'*[data-password-action="edit"]',function(a){var s=$(this),n=s.data("password-id"),i=$("#page_password_list_form_edit");a.preventDefault(),s.attr("disabled",""),s.html(g),e("a=password/query&id="+encodeURIComponent(n),function(e){e.success?(s.html("<i class='material-icons'>edit</i>"),s.attr("disabled",null),i.find("input[name='id']").val(n),i.find("input[name='username']").val(e.data.username.raw).change(),i.find("input[name='password']").val(e.data.password.raw).change(),i.find("input[name='description']").val(e.data.description.raw).change(),$("#page_password_list_modal_edit").modal("show")):t("There has been a problem with the server. Please try again later")},function(){t("There has been a problem with the server. Please try again later")})}),a.on("click",'*[data-password-action="archive"]',function(a){var s=$(this),n=s.data("password-id");a.preventDefault(),s.attr("disabled",""),s.html(g),e("a=password/archive&id="+encodeURIComponent(n),function(e){e.success?r():t("There has been a problem with the server. Please try again later")},function(){t("There has been a problem with the server. Please try again later")})}),d.on("click",'*[data-password-action="restore"]',function(a){var s=$(this),n=s.data("password-id");a.preventDefault(),s.attr("disabled",""),s.html(g),e("a=password/restore&id="+encodeURIComponent(n),function(e){e.success?r():(s.html("<i class='material-icons'>error</i>"),t("There has been a problem with the server. Please try again later"))},function(){s.html("<i class='material-icons'>error</i>"),t("There has been a problem with the server. Please try again later")})}),d.on("click",'*[data-password-action="delete"]',function(a){var s=$(this),n=s.data("password-id");a.preventDefault(),s.attr("disabled",""),s.html(g),e("a=password/delete&id="+encodeURIComponent(n),function(e){e.success?r():(s.html("<i class='material-icons'>error</i>"),t("There has been a problem with the server. Please try again later"))},function(){s.html("<i class='material-icons'>error</i>"),t("There has been a problem with the server. Please try again later")})}),$(".modal").on("shown.bs.modal",function(){$(this).find("input[type=text],textarea,select").filter(":visible:first").focus()}),$("#page_user_settings_modal_2fa_setup").on("show.bs.modal",function(){var a=$(this);$("#tab_2fa").find("a:first").tab("show"),a.find("form").each(function(e,t){t.reset()}),$("#btn_2fa_next").show(),$("#btn_2fa_enable_submit").hide(),$("#btn_2fa_finish").hide(),e("a=user/2faGenerateKey",function(e){e.success?($("#pre_2fa_key").text(e.data.privateKey),$("#pre_2fa_key2").text(e.data.privateKey),$("#img_2fa_key").attr("src",e.data.qrCodeUrl),a.find("input[name='2faPrivateKey']").val(e.data.privateKey).change()):t("There has been a problem with the server. Please try again later")})})}var h="login",p="logged_out",f=!1,b={fade_on_focus_loss:!0},m=null,v=0,g='<svg class="spinner" width="20px" height="20px" viewBox="0 0 66 66" xmlns="http://www.w3.org/2000/svg"><circle class="path" fill="none" stroke-width="6" stroke-linecap="round" cx="33" cy="33" r="30"></circle></svg>';return $(function(){h=function(){var e=location.href.substring(location.href.indexOf("#"));return"#!p="===e.substring(0,4)&&e.length>1?e.substring(4):h}(),l(function(){m.logged_in&&"logged_out"===p?"login"!==h&&"register"!==h||(h="password_list"):m.logged_in||"logged_in"!==p||d(),r(function(){history.replaceState({page:h,scope:p},"PASSY","#!p="+h)}),u(),setInterval(function(){l(function(){m.logged_in||"logged_in"!==p||d()})},2e3)})}),{setOption:function(e,t){return null!=b[e]&&(b[e]=t,!0)}}}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBhc3N5LmpzIl0sIm5hbWVzIjpbInBhc3N5IiwicmVxdWVzdCIsImRhdGEiLCJvblN1Y2Nlc3MiLCJvbkZhaWx1cmUiLCJvcHRpb25zIiwidXJsIiwibWV0aG9kIiwic3VjY2VzcyIsInRleHRTdGF0dXMiLCJqcVhIUiIsIm1zZyIsImNsb3NlU2Vzc2lvbiIsInNuYWNrYmFyIiwiZXJyb3IiLCJlcnJvclRocm93biIsIiQiLCJhamF4IiwiY29udGVudCIsImJ1dHRvblRleHQiLCJidXR0b25DYWxsYmFjayIsImJ1dHRvblR5cGUiLCJzbmFja2JhcktpbGwiLCJzZXRUaW1lb3V0Iiwia2lsbFNuYWNrYmFyIiwiY2xlYXJUaW1lb3V0IiwiYnV0dG9uIiwiYXBwZW5kIiwib24iLCJhZGRDbGFzcyIsImNzcyIsImJvdHRvbSIsIm9mZnNldCIsInNuYWNrYmFyQ291bnQiLCJvdXRlckhlaWdodCIsImVsZW0iLCJyZW1vdmVDbGFzcyIsIm9mZiIsInJlbW92ZSIsImhpZGVBbGxNb2RhbHMiLCJoYXNDbGFzcyIsIm1vZGFsIiwicmFuZG9tUGFzc3dvcmQiLCJsZW5ndGgiLCJzYWZlQWxwaGFiZXQiLCJzdHJpbmciLCJpIiwiYWxwaGFiZXQiLCJjaGFyQXQiLCJtYXgiLCJhcmd1bWVudHMiLCJ1bmRlZmluZWQiLCJNYXRoIiwiZmxvb3IiLCJyYW5kb20iLCJyYW5kb21OdW1iZXIiLCJsb2FkUGFnZSIsInBhZ2UiLCJjYWxsYmFjayIsInB1c2hIaXN0b3J5Iiwic3dpdGNoaW5nUGFnZSIsIm9sZFBhZ2UiLCJjdXJyZW50UGFnZSIsIm5ld1BhZ2UiLCJzcGlubmVyIiwic2NvcGUiLCJjdXJyZW50U2NvcGUiLCJlYWNoIiwiZWxlbWVudCIsImhpZGUiLCJzaG93IiwiY2hhbmdlUGFnZVNjb3BlIiwiYXR0ciIsImluZGV4IiwiaGlzdG9yeSIsInB1c2hTdGF0ZSIsImZhZGVPdXQiLCJyb3ciLCJjb250ZW50QXJjaGl2ZWRQYXNzd29yZCIsImNvbnRlbnRQYXNzd29yZHMiLCJpdGVtIiwidGFibGVBcmNoaXZlZEJvZHkiLCJkZXNjcmlwdGlvbiIsInNhZmUiLCJjYWxsYmFja0RvbmUiLCJyYXciLCJ1c2VybmFtZSIsInRhYmxlUGFzc3dvcmRzQm9keSIsInBhc3N3b3JkX2lkIiwiZGF0ZV9hcmNoaXZlZCIsInByZXR0eSIsImh0bWwiLCJkYXRlX2FkZGVkIiwic2V0T3B0aW9uIiwidmFsdWUiLCJmZXRjaFBhc3N3b3JkcyIsInRhYmxlQm9keSIsImpzb25EYXRhIiwiaXAiLCJ1c2VyX2FnZW50IiwiZGF0ZSIsImZldGNoSVBMb2ciLCJmZXRjaFN0YXR1cyIsImxhdGVzdFN0YXR1cyIsInR3b0ZhY3RvckVuYWJsZUJ1dHRvbiIsInR3b0ZhY3RvckRpc2FibGVCdXR0b24iLCJ0d29GYWN0b3JTdGF0dXMiLCJwYXNzd29yZENoYW5nZUZvcm0iLCJwYXNzd29yZENoYW5nZURpc2FibGVkQWxlcnQiLCJ0d29fZmFjdG9yIiwiZW5hYmxlZCIsInJlZnJlc2giLCJkb0xvZ291dCIsInJlcGxhY2VTdGF0ZSIsInNob3dDb25uZWN0aW9uRXJyb3JNb2RhbCIsImhpZGVDb25uZWN0aW9uRXJyb3JNb2RhbCIsImlucHV0cyIsImNvbnRleHRNZW51IiwiYXJjaGl2ZWRQYXNzd29yZFRhYmxlIiwid2F2ZXMiLCJjaGFuZ2UiLCJ2YWwiLCJtZSIsInRoaXMiLCJ0YXJnZXQiLCJjbGljayIsInByZXZlbnREZWZhdWx0IiwiZSIsIm5leHQiLCJmaW5kIiwidHJpZ2dlciIsInRhcmdldEZvcm0iLCJjb25zb2xlIiwicXVlcnkiLCJjaGlsZHJlbiIsInZpc2libGUiLCJ1c2VyTmFtZSIsInRleHQiLCJpbmRleE9mIiwid2luZG93Iiwic2Nyb2xsIiwiZHJvcGRvd24iLCJhbmltYXRpb24tZGVsYXkiLCJkZWxheSIsInNjcm9sbFRvcCIsImxhc3RIZWlnaHQiLCJuYXZiYXIiLCJmaXJzdEhlaWdodCIsImRvY3VtZW50IiwiZmlyc3QiLCJ0cmFuc2Zvcm0iLCJmYWRlX29uX2ZvY3VzX2xvc3MiLCJmb2N1cyIsImtleUNvZGUiLCJibHVyIiwid2hpY2giLCJzaGlmdEtleSIsIngiLCJjbGllbnRYIiwieSIsImVsZW1lbnRVbmRlck1vdXNlIiwidGFyZ2V0UGFnZSIsImNsaWVudFkiLCJlbGVtZW50RnJvbVBvaW50IiwicGFyZW50cyIsImlzIiwic3RhdGUiLCJvcmlnaW5hbEV2ZW50IiwiZmlsZXMiLCJzdWJtaXQiLCJGb3JtRGF0YSIsImNoZWNrZWQiLCJmaWxlIiwidHlwZSIsIm1vZGFsX2NvbnRlbnQiLCJidG4iLCJzZXJpYWxpemUiLCJpbXBvcnRlZCIsInBhcmVudCIsInJlc2V0IiwiZ3JlY2FwdGNoYSIsInN1Ym1pdEJ0biIsInBhc3N3b3JkVGFibGUiLCJwYXNzd29yZElkIiwic3Bpbm5lclNWRyIsInRpbWVvdXRQYXNzd29yZCIsImNvcHlUb0NsaXBib2FyZCIsImVuY29kZVVSSUNvbXBvbmVudCIsInBhc3N3b3JkIiwicGFzc3dvcmRPYmplY3QiLCJ0aW1lTGVmdCIsInRpbWVMZWZ0RGlzcGxheSIsInRpbWVyIiwidGVtcElucHV0Iiwic2VsZWN0IiwiZXhlY0NvbW1hbmQiLCJ0YWIiLCJmaWx0ZXIiLCJjbGVhckludGVydmFsIiwicHJpdmF0ZUtleSIsInFyQ29kZVVybCIsImdldEluaXRpYWxQYWdlIiwiaHJlZiIsInN1YnN0cmluZyIsImxvY2F0aW9uIiwiYW5jaG9yIiwibG9nZ2VkX2luIiwicmVnaXN0ZXJQYWdlTGlzdGVuZXJzIiwic2V0SW50ZXJ2YWwiLCJvcHRpb24iXSwibWFwcGluZ3MiOiJhQW1CQSxJQUFNQSxNQUFTLFdBZ0JYLFNBQUFDLEVBQUFDLEVBQUFDLEVBQUFDLEVBQUFDLEdBR0ksT0FBS0gsR0FHQUUsSUFBREEsRUFBWSxXQUNaQSxFQUFZLHVFQUtYQyxJQUFEQSxNQUdKQSxFQUFRQyxJQUFNLGFBQ2RELEVBQVFFLE9BQVMsT0FDakJGLEVBQVFILEtBQU9BLEVBQ2ZHLEVBQVFHLFFBQVUsU0FBVU4sRUFBTU8sRUFBWUMsR0FDMUMsSUFBS1IsRUFBS00sUUFDTixP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QSxFQUFBdUcsV0FBQSxjQUFBNUksR0FER3RELElBS0htRyxFQUZELFdBR0FnRyxRQUFBQSxjQUFBQSxLQUFBQSxFQUFBQSxNQUFBQSxHQUFBQSxRQUFBQSxPQUFBQSxLQUVBQSxJQUdRQyxZQUFBLFdBQ0ExRyxFQUFLQyxXQUVKQSxFQUFBdUcsV0FBQSxjQUFBNUksR0FKTHRELE9BbEJaLFVBb3dCSWlGLFVBQVcsU0FBVW9ILEVBQVFuSCxHQUN6QixPQUF1QixNQUFuQnpGLEVBQVE0TSxLQUVaNU0sRUFBUTRNLEdBQVVuSCxHQUNYLEtBL2dDSiIsImZpbGUiOiJwYXNzeS5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qIVxuICogICAgUEFTU1kgLSBNb2Rlcm4gSFRNTDUgUGFzc3dvcmQgTWFuYWdlclxuICogICAgQ29weXJpZ2h0IChDKSAyMDE3IFNlZmEgRXllb2dsdSA8Y29udGFjdEBzY3J1bXBsZXgubmV0PiAoaHR0cHM6Ly9zY3J1bXBsZXgubmV0KVxuICpcbiAqICAgIFRoaXMgcHJvZ3JhbSBpcyBmcmVlIHNvZnR3YXJlOiB5b3UgY2FuIHJlZGlzdHJpYnV0ZSBpdCBhbmQvb3IgbW9kaWZ5XG4gKiAgICBpdCB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEdOVSBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGFzIHB1Ymxpc2hlZCBieVxuICogICAgdGhlIEZyZWUgU29mdHdhcmUgRm91bmRhdGlvbiwgZWl0aGVyIHZlcnNpb24gMyBvZiB0aGUgTGljZW5zZSwgb3JcbiAqICAgIChhdCB5b3VyIG9wdGlvbikgYW55IGxhdGVyIHZlcnNpb24uXG4gKlxuICogICAgVGhpcyBwcm9ncmFtIGlzIGRpc3RyaWJ1dGVkIGluIHRoZSBob3BlIHRoYXQgaXQgd2lsbCBiZSB1c2VmdWwsXG4gKiAgICBidXQgV0lUSE9VVCBBTlkgV0FSUkFOVFk7IHdpdGhvdXQgZXZlbiB0aGUgaW1wbGllZCB3YXJyYW50eSBvZlxuICogICAgTUVSQ0hBTlRBQklMSVRZIG9yIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFLiAgU2VlIHRoZVxuICogICAgR05VIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgZm9yIG1vcmUgZGV0YWlscy5cbiAqXG4gKiAgICBZb3Ugc2hvdWxkIGhhdmUgcmVjZWl2ZWQgYSBjb3B5IG9mIHRoZSBHTlUgR2VuZXJhbCBQdWJsaWMgTGljZW5zZVxuICogICAgYWxvbmcgd2l0aCB0aGlzIHByb2dyYW0uICBJZiBub3QsIHNlZSA8aHR0cHM6Ly93d3cuZ251Lm9yZy9saWNlbnNlcy8+LlxuICpcbiAqL1xuXG5jb25zdCBwYXNzeSA9IChmdW5jdGlvbiAoKSB7XG4gICAgLy8jIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyNcbiAgICAvL0dMT0JBTCBWQVJTXG4gICAgLy8jIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyNcbiAgICBsZXQgY3VycmVudFBhZ2UgPSBcImxvZ2luXCIsXG4gICAgICAgIGN1cnJlbnRTY29wZSA9IFwibG9nZ2VkX291dFwiLFxuICAgICAgICBzd2l0Y2hpbmdQYWdlID0gZmFsc2UsXG4gICAgICAgIG9wdGlvbnMgPSB7XG4gICAgICAgICAgICBmYWRlX29uX2ZvY3VzX2xvc3M6IHRydWVcbiAgICAgICAgfSxcbiAgICAgICAgbGF0ZXN0U3RhdHVzID0gbnVsbCxcbiAgICAgICAgc25hY2tiYXJDb3VudCA9IDAsXG4gICAgICAgIHNwaW5uZXJTVkcgPSAnPHN2ZyBjbGFzcz1cInNwaW5uZXJcIiB3aWR0aD1cIjIwcHhcIiBoZWlnaHQ9XCIyMHB4XCIgdmlld0JveD1cIjAgMCA2NiA2NlwiIHhtbG5zPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIj48Y2lyY2xlIGNsYXNzPVwicGF0aFwiIGZpbGw9XCJub25lXCIgc3Ryb2tlLXdpZHRoPVwiNlwiIHN0cm9rZS1saW5lY2FwPVwicm91bmRcIiBjeD1cIjMzXCIgY3k9XCIzM1wiIHI9XCIzMFwiPjwvY2lyY2xlPjwvc3ZnPic7XG5cbiAgICAvLyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjI1xuICAgIC8vR0xPQkFMIE1FVEhPRFNcbiAgICAvLyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjI1xuXG4gICAgZnVuY3Rpb24gcmVxdWVzdChkYXRhLCBvblN1Y2Nlc3MsIG9uRmFpbHVyZSwgb3B0aW9ucykge1xuICAgICAgICBpZiAoIWRhdGEpXG4gICAgICAgICAgICByZXR1cm4gbnVsbDtcblxuICAgICAgICBpZiAoIW9uRmFpbHVyZSkge1xuICAgICAgICAgICAgb25GYWlsdXJlID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIHNuYWNrYmFyKFwiVGhlcmUgaGFzIGJlZW4gYSBwcm9ibGVtIHdpdGggdGhlIHNlcnZlci4gUGxlYXNlIHRyeSBhZ2FpbiBsYXRlci5cIik7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoIW9wdGlvbnMpXG4gICAgICAgICAgICBvcHRpb25zID0ge307XG5cbiAgICAgICAgb3B0aW9ucy51cmwgPSBcImFjdGlvbi5waHBcIjtcbiAgICAgICAgb3B0aW9ucy5tZXRob2QgPSBcIlBPU1RcIjtcbiAgICAgICAgb3B0aW9ucy5kYXRhID0gZGF0YTtcbiAgICAgICAgb3B0aW9ucy5zdWNjZXNzID0gZnVuY3Rpb24gKGRhdGEsIHRleHRTdGF0dXMsIGpxWEhSKSB7XG4gICAgICAgICAgICBpZiAoIWRhdGEuc3VjY2Vzcykge1xuICAgICAgICAgICAgICAgIHN3aXRjaCAoZGF0YS5tc2cpIHtcbiAgICAgICAgICAgICAgICAgICAgY2FzZSBcIm5vdF9hdXRoZW50aWNhdGVkXCI6XG4gICAgICAgICAgICAgICAgICAgICAgICBjbG9zZVNlc3Npb24oKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybjtcblxuICAgICAgICAgICAgICAgICAgICBjYXNlIFwiZGF0YWJhc2VfZXJyb3JcIjpcbiAgICAgICAgICAgICAgICAgICAgICAgIHNuYWNrYmFyKFwiVGhlcmUgaGFzIGJlZW4gYSBwcm9ibGVtIHdpdGggdGhlIGRhdGFiYXNlLiBQbGVhc2UgdHJ5IGFnYWluIGxhdGVyLlwiKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBvblN1Y2Nlc3MoZGF0YSwgdGV4dFN0YXR1cywganFYSFIpO1xuICAgICAgICB9O1xuICAgICAgICBvcHRpb25zLmVycm9yID0gZnVuY3Rpb24gKGpxWEhSLCB0ZXh0U3RhdHVzLCBlcnJvclRocm93bikge1xuICAgICAgICAgICAgb25GYWlsdXJlKGpxWEhSLCB0ZXh0U3RhdHVzLCBlcnJvclRocm93bik7XG4gICAgICAgIH07XG4gICAgICAgIHJldHVybiAkLmFqYXgob3B0aW9ucyk7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gc25hY2tiYXIoY29udGVudCwgYnV0dG9uVGV4dCwgYnV0dG9uQ2FsbGJhY2ssIGJ1dHRvblR5cGUpIHtcbiAgICAgICAgY29uc3Qgc25hY2tiYXIgPSAkKCc8ZGl2IGNsYXNzPVwic25hY2tiYXJcIj48L2Rpdj4nKTtcblxuICAgICAgICBpZiAoIWJ1dHRvblRleHQpIHtcbiAgICAgICAgICAgIGJ1dHRvblRleHQgPSBcIkRpc21pc3NcIjtcbiAgICAgICAgfVxuXG4gICAgICAgIGNvbnN0IHNuYWNrYmFyS2lsbCA9IHNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAga2lsbFNuYWNrYmFyKHNuYWNrYmFyKTtcbiAgICAgICAgfSwgNTAwMCk7XG5cbiAgICAgICAgaWYgKCFidXR0b25DYWxsYmFjaykge1xuICAgICAgICAgICAgYnV0dG9uQ2FsbGJhY2sgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgY2xlYXJUaW1lb3V0KHNuYWNrYmFyS2lsbCk7XG4gICAgICAgICAgICAgICAga2lsbFNuYWNrYmFyKHNuYWNrYmFyKTtcbiAgICAgICAgICAgIH07XG4gICAgICAgIH1cbiAgICAgICAgaWYgKCFidXR0b25UeXBlKSB7XG4gICAgICAgICAgICBidXR0b25UeXBlID0gXCJwcmltYXJ5XCI7XG4gICAgICAgIH1cblxuICAgICAgICBjb25zdCBidXR0b24gPSAkKCc8YnV0dG9uIGNsYXNzPVwiYnRuIGJ0bi0nICsgYnV0dG9uVHlwZSArICcgYnRuLWZsYXRcIj4nICsgYnV0dG9uVGV4dCArICc8L2J1dHRvbj4nKTtcbiAgICAgICAgc25hY2tiYXIuYXBwZW5kKCc8c3BhbiBjbGFzcz1cInNuYWNrYmFyLXRleHRcIj4nICsgY29udGVudCArICc8L3NwYW4+Jyk7XG4gICAgICAgIHNuYWNrYmFyLmFwcGVuZChidXR0b24pO1xuXG4gICAgICAgIGJ1dHRvbi5vbihcImNsaWNrXCIsIGJ1dHRvbkNhbGxiYWNrKTtcblxuICAgICAgICAkKFwiYm9keVwiKS5hcHBlbmQoc25hY2tiYXIpO1xuICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHNuYWNrYmFyLmFkZENsYXNzKFwic25hY2tiYXItc2hvd1wiKTtcbiAgICAgICAgICAgIHNuYWNrYmFyLmNzcyh7XCJib3R0b21cIjogXCItXCIgKyBzbmFja2Jhci5vdXRlckhlaWdodCgpICsgXCJweFwifSk7XG4gICAgICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICBjb25zdCBvZmZzZXQgPSBzbmFja2JhckNvdW50KysgKiAoc25hY2tiYXIub3V0ZXJIZWlnaHQoKSArIDEwKSArIDIwO1xuICAgICAgICAgICAgICAgIHNuYWNrYmFyLmNzcyh7XCJib3R0b21cIjogb2Zmc2V0ICsgXCJweFwifSk7XG4gICAgICAgICAgICB9LCAxKTtcbiAgICAgICAgfSwgMSk7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24ga2lsbFNuYWNrYmFyKGVsZW0pIHtcbiAgICAgICAgZWxlbS5yZW1vdmVDbGFzcyhcInNuYWNrYmFyLXNob3dcIik7XG4gICAgICAgIGVsZW0uY3NzKHtcImJvdHRvbVwiOiBcIi1cIiArIGVsZW0ub3V0ZXJIZWlnaHQoKSArIFwicHhcIn0pO1xuICAgICAgICBlbGVtLm9uKCd0cmFuc2l0aW9uZW5kIHdlYmtpdFRyYW5zaXRpb25FbmQgb1RyYW5zaXRpb25FbmQnLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICBlbGVtLm9mZigndHJhbnNpdGlvbmVuZCB3ZWJraXRUcmFuc2l0aW9uRW5kIG9UcmFuc2l0aW9uRW5kJyk7XG4gICAgICAgICAgICBlbGVtLnJlbW92ZSgpO1xuICAgICAgICAgICAgc25hY2tiYXJDb3VudC0tO1xuICAgICAgICB9KTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBoaWRlQWxsTW9kYWxzKCkge1xuICAgICAgICBpZiAoJChcImJvZHlcIikuaGFzQ2xhc3MoXCJtb2RhbC1vcGVuXCIpKSB7XG4gICAgICAgICAgICAkKCcubW9kYWwuZmFkZS5pbicpLm1vZGFsKCdoaWRlJyk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBmdW5jdGlvbiByYW5kb21QYXNzd29yZChsZW5ndGgpIHtcbiAgICAgICAgY29uc3Qgc2FmZUFscGhhYmV0ID0gXCJhYmNkZWZnaGlqa2xtbm9wcXJzdHV2d3h5ekFCQ0RFRkdISUpLTE1OT1BRUlNUVVZXWFlaMDEyMzQ1Njc4OVwiLFxuICAgICAgICAgICAgc3BlY2lhbEFscGhhYmV0ID0gXCJAIyQlXy1cIjtcblxuICAgICAgICBsZXQgc3RyaW5nID0gXCJcIjtcblxuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICBjb25zdCBhbHBoYWJldCA9IChpID09PSAwIHx8IGkgPT09IGxlbmd0aCkgPyBzYWZlQWxwaGFiZXQgOiBzYWZlQWxwaGFiZXQgKyBzcGVjaWFsQWxwaGFiZXQ7IC8vIGZpcnN0IGFuZCBsYXN0IGxldHRlciBpcyBub3QgYSBzcGVjaWFsIGNoYXJcblxuXG4gICAgICAgICAgICBzdHJpbmcgKz0gYWxwaGFiZXQuY2hhckF0KHJhbmRvbU51bWJlcihhbHBoYWJldC5sZW5ndGgpKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gc3RyaW5nO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIHJhbmRvbU51bWJlcihtYXggPSAxKSB7XG4gICAgICAgIHJldHVybiBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiBtYXgpXG4gICAgfVxuXG4gICAgZnVuY3Rpb24gY29weVRvQ2xpcGJvYXJkKHRleHQpIHtcbiAgICAgICAgbGV0IHRlbXBJbnB1dCA9ICQoXCI8aW5wdXQ+XCIpO1xuICAgICAgICAkKFwiYm9keVwiKS5hcHBlbmQodGVtcElucHV0KTtcbiAgICAgICAgdGVtcElucHV0LnZhbCh0ZXh0KS5zZWxlY3QoKTtcbiAgICAgICAgZG9jdW1lbnQuZXhlY0NvbW1hbmQoXCJjb3B5XCIpO1xuICAgICAgICB0ZW1wSW5wdXQucmVtb3ZlKCk7XG4gICAgfVxuXG5cbiAgICBmdW5jdGlvbiBnZXRJbml0aWFsUGFnZSgpIHtcbiAgICAgICAgY29uc3QgYW5jaG9yID0gbG9jYXRpb24uaHJlZi5zdWJzdHJpbmcobG9jYXRpb24uaHJlZi5pbmRleE9mKFwiI1wiKSk7XG4gICAgICAgIGlmIChhbmNob3Iuc3Vic3RyaW5nKDAsIDQpID09PSBcIiMhcD1cIiAmJiBhbmNob3IubGVuZ3RoID4gMSkge1xuICAgICAgICAgICAgcmV0dXJuIGFuY2hvci5zdWJzdHJpbmcoNCk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGN1cnJlbnRQYWdlO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIGxvYWRQYWdlKHBhZ2UsIGNhbGxiYWNrLCBwdXNoSGlzdG9yeSkge1xuICAgICAgICBpZiAoc3dpdGNoaW5nUGFnZSlcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgc3dpdGNoaW5nUGFnZSA9IHRydWU7XG4gICAgICAgIGNvbnN0IG9sZFBhZ2UgPSAkKFwiI3BhZ2VfXCIgKyBjdXJyZW50UGFnZSksIG5ld1BhZ2UgPSAkKFwiI3BhZ2VfXCIgKyBwYWdlKSwgc3Bpbm5lciA9ICQoXCIubG9hZC1zcGlubmVyXCIpO1xuICAgICAgICBjdXJyZW50UGFnZSA9IHBhZ2U7XG4gICAgICAgIGNoYW5nZVBhZ2VTY29wZShuZXdQYWdlLmF0dHIoXCJkYXRhLWFwcGx5LXBhZ2Utc2NvcGVcIikpO1xuICAgICAgICBoaWRlQWxsTW9kYWxzKCk7XG5cbiAgICAgICAgc3Bpbm5lci5hZGRDbGFzcyhcInNob3duXCIpO1xuXG4gICAgICAgICQoXCIqW2RhdGEtcGFnZS1oaWdobGlnaHRdXCIpLmVhY2goZnVuY3Rpb24gKGluZGV4LCBlbGVtZW50KSB7XG4gICAgICAgICAgICBjb25zdCBlbGVtID0gJChlbGVtZW50KTtcbiAgICAgICAgICAgIGlmIChlbGVtLmF0dHIoXCJkYXRhLXBhZ2UtaGlnaGxpZ2h0XCIpICE9PSBwYWdlKSB7XG4gICAgICAgICAgICAgICAgZWxlbS5yZW1vdmVDbGFzcyhcImFjdGl2ZVwiKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG5cbiAgICAgICAgY29uc3Qgc2hvdyA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICQoXCIqW2RhdGEtcGFnZS1oaWdobGlnaHRdXCIpLmVhY2goZnVuY3Rpb24gKGluZGV4LCBlbGVtZW50KSB7XG4gICAgICAgICAgICAgICAgY29uc3QgZWxlbSA9ICQoZWxlbWVudCk7XG4gICAgICAgICAgICAgICAgaWYgKGVsZW0uYXR0cihcImRhdGEtcGFnZS1oaWdobGlnaHRcIikgPT09IHBhZ2UpIHtcbiAgICAgICAgICAgICAgICAgICAgZWxlbS5hZGRDbGFzcyhcImFjdGl2ZVwiKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIGlmIChwdXNoSGlzdG9yeSAhPT0gZmFsc2UpXG4gICAgICAgICAgICAgICAgaGlzdG9yeS5wdXNoU3RhdGUoe1wicGFnZVwiOiBjdXJyZW50UGFnZSwgXCJzY29wZVwiOiBjdXJyZW50U2NvcGV9LCBcIlBBU1NZXCIsIFwiIyFwPVwiICsgY3VycmVudFBhZ2UpO1xuICAgICAgICAgICAgc3Bpbm5lci5yZW1vdmVDbGFzcyhcInNob3duXCIpO1xuICAgICAgICAgICAgbmV3UGFnZS5mYWRlSW4oMzAwKTtcbiAgICAgICAgICAgIHN3aXRjaGluZ1BhZ2UgPSBmYWxzZTtcbiAgICAgICAgICAgIGlmIChjYWxsYmFjaylcbiAgICAgICAgICAgICAgICBjYWxsYmFjaygpO1xuICAgICAgICB9O1xuXG4gICAgICAgIG9sZFBhZ2UuZmFkZU91dCgzMDAsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIGlmIChwYWdlID09PSBcInBhc3N3b3JkX2xpc3RcIiB8fCBwYWdlID09PSBcImFyY2hpdmVkX3Bhc3N3b3JkX2xpc3RcIikge1xuICAgICAgICAgICAgICAgIGZldGNoUGFzc3dvcmRzKHNob3cpO1xuICAgICAgICAgICAgfSBlbHNlIGlmIChwYWdlID09PSBcImxvZ2luX2hpc3RvcnlcIikge1xuICAgICAgICAgICAgICAgIGZldGNoSVBMb2coc2hvdyk7XG4gICAgICAgICAgICB9IGVsc2UgaWYgKHBhZ2UgPT09IFwidXNlcl9zZXR0aW5nc1wiKSB7XG4gICAgICAgICAgICAgICAgZmV0Y2hTdGF0dXMoZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICBpZiAobGF0ZXN0U3RhdHVzKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAvLyAyZmEgU3RhdHVzXG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zdCB0d29GYWN0b3JFbmFibGVCdXR0b24gPSAkKFwiI2J0bjJmYVNldHVwTW9kYWxUb2dnbGVcIiksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdHdvRmFjdG9yRGlzYWJsZUJ1dHRvbiA9ICQoXCIjYnRuMmZhRGlzYWJsZU1vZGFsVG9nZ2xlXCIpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHR3b0ZhY3RvclN0YXR1cyA9ICQoXCIjdGV4dF8yZmFfc3RhdHVzXCIpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBhc3N3b3JkQ2hhbmdlRm9ybSA9ICQoXCIjcGFnZV91c2VyX3NldHRpbmdzX2Zvcm1fY2hhbmdlX3Bhc3N3b3JkXCIpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBhc3N3b3JkQ2hhbmdlRGlzYWJsZWRBbGVydCA9ICQoXCIjcGFnZV91c2VyX3NldHRpbmdzX2FsZXJ0X2NoYW5nZV9wYXNzd29yZF9kaXNhYmxlZFwiKTtcblxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGxhdGVzdFN0YXR1cy50d29fZmFjdG9yLmVuYWJsZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0d29GYWN0b3JTdGF0dXMuaHRtbChcIkVuYWJsZWRcIik7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdHdvRmFjdG9yU3RhdHVzLnJlbW92ZUNsYXNzKFwidGV4dC1kYW5nZXJcIik7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdHdvRmFjdG9yU3RhdHVzLmFkZENsYXNzKFwidGV4dC1zdWNjZXNzXCIpO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdHdvRmFjdG9yRW5hYmxlQnV0dG9uLmhpZGUoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0d29GYWN0b3JFbmFibGVCdXR0b24uYXR0cihcImRpc2FibGVkXCIsIFwiXCIpO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdHdvRmFjdG9yRGlzYWJsZUJ1dHRvbi5zaG93KCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdHdvRmFjdG9yRGlzYWJsZUJ1dHRvbi5hdHRyKFwiZGlzYWJsZWRcIiwgbnVsbCk7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwYXNzd29yZENoYW5nZUZvcm0uaGlkZSgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBhc3N3b3JkQ2hhbmdlRGlzYWJsZWRBbGVydC5zaG93KCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHR3b0ZhY3RvclN0YXR1cy5odG1sKFwiRGlzYWJsZWRcIik7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdHdvRmFjdG9yU3RhdHVzLnJlbW92ZUNsYXNzKFwidGV4dC1zdWNjZXNzXCIpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHR3b0ZhY3RvclN0YXR1cy5hZGRDbGFzcyhcInRleHQtZGFuZ2VyXCIpO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdHdvRmFjdG9yRW5hYmxlQnV0dG9uLnNob3coKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0d29GYWN0b3JFbmFibGVCdXR0b24uYXR0cihcImRpc2FibGVkXCIsIG51bGwpO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdHdvRmFjdG9yRGlzYWJsZUJ1dHRvbi5oaWRlKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdHdvRmFjdG9yRGlzYWJsZUJ1dHRvbi5hdHRyKFwiZGlzYWJsZWRcIiwgXCJcIik7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwYXNzd29yZENoYW5nZUZvcm0uc2hvdygpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBhc3N3b3JkQ2hhbmdlRGlzYWJsZWRBbGVydC5oaWRlKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgc2hvdygpO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBzaG93KCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIHJlZnJlc2goY2FsbGJhY2spIHtcbiAgICAgICAgbG9hZFBhZ2UoY3VycmVudFBhZ2UsIGNhbGxiYWNrLCBmYWxzZSk7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gY2hhbmdlUGFnZVNjb3BlKHNjb3BlKSB7XG4gICAgICAgIGN1cnJlbnRTY29wZSA9IHNjb3BlO1xuICAgICAgICAkKFwiKltkYXRhLXBhZ2Utc2NvcGVdXCIpLmVhY2goZnVuY3Rpb24gKGksIGVsZW1lbnQpIHtcbiAgICAgICAgICAgIGNvbnN0IGVsZW0gPSAkKGVsZW1lbnQpO1xuICAgICAgICAgICAgaWYgKGVsZW0uZGF0YShcInBhZ2Utc2NvcGVcIikgIT09IHNjb3BlKSB7XG4gICAgICAgICAgICAgICAgZWxlbS5oaWRlKCk7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIGVsZW0uc2hvdygpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBkb0xvZ291dCgpIHtcbiAgICAgICAgcmVxdWVzdChcImE9dXNlci9sb2dvdXRcIiwgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgc25hY2tiYXIoXCJZb3UgaGF2ZSBiZWVuIGxvZ2dlZCBvdXQhXCIpO1xuICAgICAgICAgICAgbG9hZFBhZ2UoXCJsb2dpblwiKTtcbiAgICAgICAgfSk7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gY2xvc2VTZXNzaW9uKCkge1xuICAgICAgICBzbmFja2JhcihcIllvdXIgc2Vzc2lvbiBoYXMgZXhwaXJlZCFcIik7XG4gICAgICAgIHN3aXRjaGluZ1BhZ2UgPSBmYWxzZTtcbiAgICAgICAgbG9hZFBhZ2UoXCJsb2dpblwiLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICBoaXN0b3J5LnJlcGxhY2VTdGF0ZSh7XCJwYWdlXCI6IGN1cnJlbnRQYWdlLCBcInNjb3BlXCI6IGN1cnJlbnRTY29wZX0sIFwiUEFTU1lcIiwgXCIjIXA9XCIgKyBjdXJyZW50UGFnZSk7XG4gICAgICAgIH0sIGZhbHNlKTtcbiAgICB9XG5cbi8vIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjXG4vL0RPQ1VNRU5UIExPQURcbi8vIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjXG4gICAgJChmdW5jdGlvbiAoKSB7XG4gICAgICAgIGN1cnJlbnRQYWdlID0gZ2V0SW5pdGlhbFBhZ2UoKTtcbiAgICAgICAgZmV0Y2hTdGF0dXMoZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgaWYgKGxhdGVzdFN0YXR1cy5sb2dnZWRfaW4gJiYgY3VycmVudFNjb3BlID09PSBcImxvZ2dlZF9vdXRcIikge1xuICAgICAgICAgICAgICAgIGlmIChjdXJyZW50UGFnZSA9PT0gXCJsb2dpblwiIHx8IGN1cnJlbnRQYWdlID09PSBcInJlZ2lzdGVyXCIpXG4gICAgICAgICAgICAgICAgICAgIGN1cnJlbnRQYWdlID0gXCJwYXNzd29yZF9saXN0XCI7IC8vIGxvYWQgcGFzc3dvcmQgbGlzdCBpZiBhbHJlYWR5IGF1dGhlbnRpY2F0ZWRcblxuICAgICAgICAgICAgfSBlbHNlIGlmICghbGF0ZXN0U3RhdHVzLmxvZ2dlZF9pbiAmJiBjdXJyZW50U2NvcGUgPT09IFwibG9nZ2VkX2luXCIpIHtcbiAgICAgICAgICAgICAgICBjbG9zZVNlc3Npb24oKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgcmVmcmVzaChmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgaGlzdG9yeS5yZXBsYWNlU3RhdGUoe1wicGFnZVwiOiBjdXJyZW50UGFnZSwgXCJzY29wZVwiOiBjdXJyZW50U2NvcGV9LCBcIlBBU1NZXCIsIFwiIyFwPVwiICsgY3VycmVudFBhZ2UpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICByZWdpc3RlclBhZ2VMaXN0ZW5lcnMoKTtcblxuICAgICAgICAgICAgLy8gU3RhcnQgc3RhdHVzIHRpbWVyLlxuICAgICAgICAgICAgc2V0SW50ZXJ2YWwoZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIGZldGNoU3RhdHVzKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgICAgLy8gU2Vzc2lvbiBleHBpcmVkXG4gICAgICAgICAgICAgICAgICAgIGlmICghbGF0ZXN0U3RhdHVzLmxvZ2dlZF9pbiAmJiBjdXJyZW50U2NvcGUgPT09IFwibG9nZ2VkX2luXCIpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNsb3NlU2Vzc2lvbigpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9LCAyMDAwKTtcbiAgICAgICAgfSk7XG4gICAgfSk7XG5cbiAgICBmdW5jdGlvbiBmZXRjaFN0YXR1cyhjYWxsYmFjaykge1xuICAgICAgICByZXF1ZXN0KFwiYT1zdGF0dXNcIiwgZnVuY3Rpb24gKGRhdGEpIHtcbiAgICAgICAgICAgIGlmICghZGF0YS5zdWNjZXNzKSB7XG4gICAgICAgICAgICAgICAgc2hvd0Nvbm5lY3Rpb25FcnJvck1vZGFsKCk7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIGhpZGVDb25uZWN0aW9uRXJyb3JNb2RhbCgpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgbGF0ZXN0U3RhdHVzID0gZGF0YS5kYXRhO1xuICAgICAgICAgICAgaWYgKGNhbGxiYWNrKVxuICAgICAgICAgICAgICAgIGNhbGxiYWNrKGRhdGEpO1xuICAgICAgICB9LCBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICBzaG93Q29ubmVjdGlvbkVycm9yTW9kYWwoKTtcbiAgICAgICAgfSk7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gc2hvd0Nvbm5lY3Rpb25FcnJvck1vZGFsKCkge1xuICAgICAgICAkKFwiI21vZGFsX2Nvbm5lY3Rpb25fbG9zdFwiKS5tb2RhbChcInNob3dcIik7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gaGlkZUNvbm5lY3Rpb25FcnJvck1vZGFsKCkge1xuICAgICAgICAkKFwiI21vZGFsX2Nvbm5lY3Rpb25fbG9zdFwiKS5tb2RhbChcImhpZGVcIik7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gcmVnaXN0ZXJQYWdlTGlzdGVuZXJzKCkge1xuICAgICAgICBsZXQgcGFzc3dvcmRUYWJsZSA9ICQoJyN0Ym9keVBhc3N3b3JkcycpLFxuICAgICAgICAgICAgYXJjaGl2ZWRQYXNzd29yZFRhYmxlID0gJCgnI3Rib2R5QXJjaGl2ZWRQYXNzd29yZHMnKSxcbiAgICAgICAgICAgIGlucHV0cyA9ICQoXCIudGV4dCA+IGlucHV0XCIpLFxuICAgICAgICAgICAgY29udGV4dE1lbnUgPSAkKFwiI2Ryb3Bkb3duQ29udGV4dE1lbnVcIik7XG5cbiAgICAgICAgJC53YXZlcyhcIi5uYXYgPiBsaSA+IGFcIik7XG4gICAgICAgICQud2F2ZXMoXCIuYnRuOm5vdChbZGlzYWJsZWRdKVwiKTtcbiAgICAgICAgJC53YXZlcyhcIi5idG4taW5wdXQ6bm90KFtkaXNhYmxlZF0pXCIpO1xuXG4gICAgICAgIGlucHV0cy5lYWNoKGZ1bmN0aW9uIChpbmRleCwgZWxlbWVudCkge1xuICAgICAgICAgICAgY29uc3QgZWxlbSA9ICQoZWxlbWVudCk7XG4gICAgICAgICAgICBpZiAoZWxlbS52YWwoKS5sZW5ndGggPiAwKVxuICAgICAgICAgICAgICAgIGVsZW0uYWRkQ2xhc3MoXCJoYXN0ZXh0XCIpO1xuICAgICAgICB9KTtcblxuICAgICAgICBpbnB1dHMuY2hhbmdlKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIGNvbnN0IG1lID0gJCh0aGlzKTtcbiAgICAgICAgICAgIGlmIChtZS52YWwoKS5sZW5ndGggPiAwKVxuICAgICAgICAgICAgICAgIG1lLmFkZENsYXNzKFwiaGFzdGV4dFwiKTtcbiAgICAgICAgICAgIGVsc2VcbiAgICAgICAgICAgICAgICBtZS5yZW1vdmVDbGFzcyhcImhhc3RleHRcIik7XG4gICAgICAgIH0pO1xuXG4gICAgICAgICQoXCIqW2RhdGEtcmFuZG9tLXZhbHVlXVwiKS5jbGljayhmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICBjb25zdCBtZSA9ICQodGhpcyksXG4gICAgICAgICAgICAgICAgdGFyZ2V0ID0gJChtZS5kYXRhKFwicmFuZG9tLXZhbHVlXCIpKTtcbiAgICAgICAgICAgIHRhcmdldC52YWwocmFuZG9tUGFzc3dvcmQoMjApKTtcbiAgICAgICAgICAgIHRhcmdldC5hdHRyKFwidHlwZVwiLCBcInRleHRcIik7XG4gICAgICAgICAgICB0YXJnZXQuY2hhbmdlKCk7XG4gICAgICAgIH0pO1xuXG4gICAgICAgICQoXCIqW2RhdGEtbmV4dD0ndGFiJ11cIikuY2xpY2soZnVuY3Rpb24gKGUpIHtcbiAgICAgICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgICAgIGNvbnN0IG1lID0gJCh0aGlzKTtcbiAgICAgICAgICAgICQobWUuZGF0YShcInRhcmdldFwiKSArICcgPiAuYWN0aXZlJykubmV4dCgnbGknKS5maW5kKCdhJykudHJpZ2dlcignY2xpY2snKTtcbiAgICAgICAgfSk7XG5cbiAgICAgICAgJChcIipbZGF0YS1oaWRlXVwiKS5jbGljayhmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICBjb25zdCBtZSA9ICQodGhpcyk7XG4gICAgICAgICAgICAkKG1lLmRhdGEoXCJoaWRlXCIpKS5oaWRlKCk7XG4gICAgICAgIH0pO1xuXG4gICAgICAgICQoXCIqW2RhdGEtc2hvd11cIikuY2xpY2soZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgY29uc3QgbWUgPSAkKHRoaXMpO1xuICAgICAgICAgICAgJChtZS5kYXRhKFwic2hvd1wiKSkuc2hvdygpO1xuICAgICAgICB9KTtcblxuICAgICAgICAkKFwiKltkYXRhLXN1Ym1pdF1cIikuY2xpY2soZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgY29uc3QgbWUgPSAkKHRoaXMpLFxuICAgICAgICAgICAgICAgIHRhcmdldEZvcm0gPSAkKG1lLmRhdGEoXCJzdWJtaXRcIikpO1xuICAgICAgICAgICAgdGFyZ2V0Rm9ybS5kYXRhKFwic3VibWl0LWJ0blwiLCBtZSk7XG4gICAgICAgICAgICB0YXJnZXRGb3JtLnN1Ym1pdCgpO1xuICAgICAgICB9KTtcblxuICAgICAgICAkKFwiaW5wdXRbZGF0YS1zZWFyY2gtaW5dXCIpLm9uKFwia2V5dXBcIiwgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgY29uc29sZS5sb2coXCJjaGFuZ2VcIik7XG4gICAgICAgICAgICBsZXQgbWUgPSAkKHRoaXMpLFxuICAgICAgICAgICAgICAgIHF1ZXJ5ID0gbWUudmFsKCksXG4gICAgICAgICAgICAgICAgdGFyZ2V0ID0gJChtZS5hdHRyKFwiZGF0YS1zZWFyY2gtaW5cIikpO1xuXG4gICAgICAgICAgICBpZiAodGFyZ2V0LmlzKFwidGFibGVcIikpXG4gICAgICAgICAgICAgICAgdGFyZ2V0ID0gdGFyZ2V0LmZpbmQoXCJ0Ym9keVwiKTtcblxuXG4gICAgICAgICAgICB0YXJnZXQuY2hpbGRyZW4oXCJ0clwiKS5lYWNoKGZ1bmN0aW9uIChpbmRleCwgZWxlbWVudCkge1xuICAgICAgICAgICAgICAgIGNvbnN0IGVsZW0gPSAkKGVsZW1lbnQpO1xuXG4gICAgICAgICAgICAgICAgY29uc3QgdmlzaWJsZSA9IGVsZW0uYXR0cihcImRhdGEtdmlzaWJsZVwiKSA9PT0gXCJ0cnVlXCI7XG4gICAgICAgICAgICAgICAgY29uc3QgdXNlck5hbWUgPSBlbGVtLmNoaWxkcmVuKDApLnRleHQoKTtcbiAgICAgICAgICAgICAgICBjb25zdCBkZXNjcmlwdGlvbiA9IGVsZW0uY2hpbGRyZW4oMikudGV4dCgpO1xuXG4gICAgICAgICAgICAgICAgaWYgKCh1c2VyTmFtZSAhPT0gXCJOb25lXCIgJiYgdXNlck5hbWUuaW5kZXhPZihxdWVyeSkgIT09IC0xKSB8fCAoZGVzY3JpcHRpb24gIT09IFwiTm9uZVwiICYmIGRlc2NyaXB0aW9uLmluZGV4T2YocXVlcnkpICE9PSAtMSkpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKCF2aXNpYmxlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBlbGVtLnNob3coKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGVsZW0uYXR0cihcImRhdGEtdmlzaWJsZVwiLCBcInRydWVcIik7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBpZiAodmlzaWJsZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgZWxlbS5oaWRlKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICBlbGVtLmF0dHIoXCJkYXRhLXZpc2libGVcIiwgXCJmYWxzZVwiKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9KTtcblxuICAgICAgICBsZXQgZGVsYXkgPSAxMDA7XG4gICAgICAgICQoXCIuZHJvcGRvd24tbWVudVwiKS5maW5kKFwibGlcIikuZWFjaChmdW5jdGlvbiAoaW5kZXgsIGVsZW1lbnQpIHtcbiAgICAgICAgICAgIGNvbnN0IGVsZW0gPSAkKGVsZW1lbnQpO1xuICAgICAgICAgICAgZWxlbS5jc3Moe1wiYW5pbWF0aW9uLWRlbGF5XCI6IGRlbGF5ICsgXCJtc1wifSk7XG4gICAgICAgICAgICBkZWxheSArPSAyNTtcbiAgICAgICAgfSk7XG5cbiAgICAgICAgbGV0IGxhc3RIZWlnaHQgPSAwO1xuICAgICAgICBjb25zdCBuYXZiYXIgPSAkKFwiLm5hdmJhci1maXhlZC10b3BcIik7XG4gICAgICAgICQod2luZG93KS5zY3JvbGwoZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgJChcIi5kcm9wZG93bi5vcGVuXCIpLmZpbmQoXCIuZHJvcGRvd24tdG9nZ2xlXCIpLmRyb3Bkb3duKFwidG9nZ2xlXCIpO1xuICAgICAgICAgICAgJChcIi5jb250ZXh0bWVudS5vcGVuXCIpLnJlbW92ZUNsYXNzKFwib3BlblwiKTtcblxuICAgICAgICAgICAgY29uc3Qgc2Nyb2xsVG9wID0gJChkb2N1bWVudCkuc2Nyb2xsVG9wKCksXG4gICAgICAgICAgICAgICAgZmlyc3RIZWlnaHQgPSBuYXZiYXIuY2hpbGRyZW4oKS5maXJzdCgpLm91dGVySGVpZ2h0KCk7XG5cbiAgICAgICAgICAgIGlmIChzY3JvbGxUb3AgPCBmaXJzdEhlaWdodCkge1xuICAgICAgICAgICAgICAgIG5hdmJhci5jc3Moe3RyYW5zZm9ybTogXCJ0cmFuc2xhdGVZKC1cIiArIHNjcm9sbFRvcCArIFwicHgpXCJ9KTtcbiAgICAgICAgICAgICAgICBsYXN0SGVpZ2h0ID0gc2Nyb2xsVG9wO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKHNjcm9sbFRvcCA+PSBmaXJzdEhlaWdodCkge1xuICAgICAgICAgICAgICAgIG5hdmJhci5jc3Moe3RyYW5zZm9ybTogXCJ0cmFuc2xhdGVZKC1cIiArIGZpcnN0SGVpZ2h0ICsgXCJweClcIn0pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcblxuICAgICAgICAkKHdpbmRvdykuZm9jdXMoZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgY29uc3QgY29udGVudCA9ICQoXCIuY29udGVudFwiKTtcbiAgICAgICAgICAgIGlmICghb3B0aW9ucy5mYWRlX29uX2ZvY3VzX2xvc3MgJiYgIWNvbnRlbnQuaGFzQ2xhc3MoXCJjb250ZW50LWhpZGRlblwiKSlcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICBjb250ZW50LnJlbW92ZUNsYXNzKFwiY29udGVudC1oaWRkZW5cIik7XG4gICAgICAgIH0pLmJsdXIoZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgaWYgKCFvcHRpb25zLmZhZGVfb25fZm9jdXNfbG9zcylcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICBpZiAoJCgnaWZyYW1lOmhvdmVyJykubGVuZ3RoID09PSAwKVxuICAgICAgICAgICAgICAgICQoXCIuY29udGVudFwiKS5hZGRDbGFzcyhcImNvbnRlbnQtaGlkZGVuXCIpO1xuICAgICAgICB9KTtcblxuICAgICAgICAkKGRvY3VtZW50KS5vbihcImtleWRvd25cIiwgZnVuY3Rpb24gKGUpIHtcbiAgICAgICAgICAgIGlmICgoZS53aGljaCB8fCBlLmtleUNvZGUpID09PSAxMTYpIHtcbiAgICAgICAgICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgICAgICAgaWYgKGUuc2hpZnRLZXkpXG4gICAgICAgICAgICAgICAgICAgIGxvY2F0aW9uLnJlbG9hZCh0cnVlKTtcbiAgICAgICAgICAgICAgICBlbHNlXG4gICAgICAgICAgICAgICAgICAgIHJlZnJlc2goKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG5cbiAgICAgICAgJChkb2N1bWVudCkub24oXCJtb3VzZXVwXCIsIGZ1bmN0aW9uIChlKSB7XG4gICAgICAgICAgICBpZiAoZS53aGljaCA9PT0gMSlcbiAgICAgICAgICAgICAgICBjb250ZXh0TWVudS5yZW1vdmVDbGFzcyhcIm9wZW5cIik7XG4gICAgICAgIH0pO1xuXG4gICAgICAgICQoZG9jdW1lbnQpLm9uKFwiY29udGV4dG1lbnVcIiwgZnVuY3Rpb24gKGUpIHtcbiAgICAgICAgICAgIGlmIChlLnNoaWZ0S2V5KVxuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIGNvbnN0IHggPSBlLmNsaWVudFgsXG4gICAgICAgICAgICAgICAgeSA9IGUuY2xpZW50WTtcbiAgICAgICAgICAgIGNvbnN0IGVsZW1lbnRVbmRlck1vdXNlID0gJChkb2N1bWVudC5lbGVtZW50RnJvbVBvaW50KHgsIHkpKTtcbiAgICAgICAgICAgIGlmIChlbGVtZW50VW5kZXJNb3VzZS5oYXNDbGFzcyhcIm5vLWNvbnRleHRtZW51XCIpIHx8IGVsZW1lbnRVbmRlck1vdXNlLnBhcmVudHMoXCIubm8tY29udGV4dG1lbnVcIikubGVuZ3RoID4gMClcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICBpZiAoZWxlbWVudFVuZGVyTW91c2UuaXMoXCJpbnB1dFwiKSB8fCBlbGVtZW50VW5kZXJNb3VzZS5pcyhcInRleHRhcmVhXCIpIHx8IGVsZW1lbnRVbmRlck1vdXNlLmlzKFwic2VsZWN0XCIpKVxuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgICAgIGNvbnRleHRNZW51LnJlbW92ZUNsYXNzKFwib3BlblwiKTtcbiAgICAgICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIGNvbnRleHRNZW51LmNzcyh7dHJhbnNmb3JtOiBcInRyYW5zbGF0ZShcIiArIHggKyBcInB4LCBcIiArIHkgKyBcInB4KVwifSk7XG4gICAgICAgICAgICAgICAgY29udGV4dE1lbnUuYWRkQ2xhc3MoXCJvcGVuXCIpO1xuICAgICAgICAgICAgfSwgMTApO1xuICAgICAgICB9KTtcblxuICAgICAgICAkKFwiKltkYXRhLXRvLXBhZ2VdXCIpLmNsaWNrKGZ1bmN0aW9uIChlKSB7XG4gICAgICAgICAgICBjb25zdCBtZSA9ICQodGhpcyk7XG4gICAgICAgICAgICBsZXQgdGFyZ2V0UGFnZSA9IG1lLmF0dHIoXCJkYXRhLXRvLXBhZ2VcIik7XG4gICAgICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgICBpZiAodGFyZ2V0UGFnZSA9PT0gXCJyZWZyZXNoXCIpXG4gICAgICAgICAgICAgICAgdGFyZ2V0UGFnZSA9IGN1cnJlbnRQYWdlO1xuXG4gICAgICAgICAgICBsb2FkUGFnZSh0YXJnZXRQYWdlKTtcbiAgICAgICAgfSk7XG5cbiAgICAgICAgJCh3aW5kb3cpLm9uKCdwb3BzdGF0ZScsIGZ1bmN0aW9uIChlKSB7XG4gICAgICAgICAgICBjb25zb2xlLmxvZyhlKTtcbiAgICAgICAgICAgIGNvbnN0IHN0YXRlID0gZS5vcmlnaW5hbEV2ZW50LnN0YXRlO1xuICAgICAgICAgICAgaWYgKGN1cnJlbnRTY29wZSA9PT0gc3RhdGUuc2NvcGUpXG4gICAgICAgICAgICAgICAgbG9hZFBhZ2Uoc3RhdGUucGFnZSwgbnVsbCwgZmFsc2UpO1xuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgaGlzdG9yeS5yZXBsYWNlU3RhdGUoe1wicGFnZVwiOiBjdXJyZW50UGFnZSwgXCJzY29wZVwiOiBjdXJyZW50U2NvcGV9LCBcIlBBU1NZXCIsIFwiIyFwPVwiICsgY3VycmVudFBhZ2UpO1xuICAgICAgICAgICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG5cbiAgICAgICAgLy8gRk9STVNcblxuICAgICAgICAkKFwiI3BhZ2VfdXNlcl9zZXR0aW5nc19mb3JtX2ltcG9ydFwiKS5zdWJtaXQoZnVuY3Rpb24gKGUpIHtcbiAgICAgICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcblxuICAgICAgICAgICAgY29uc3QgZWxlbSA9ICQodGhpcyk7XG5cbiAgICAgICAgICAgIGNvbnN0IGRhdGEgPSBuZXcgRm9ybURhdGEoKTtcbiAgICAgICAgICAgIGRhdGEuYXBwZW5kKFwiYVwiLCBcIm1pc2MvaW1wb3J0XCIpO1xuICAgICAgICAgICAgY29uc3Qgd2l0aFBhc3MgPSBlbGVtLmZpbmQoJ2lucHV0W25hbWU9XCJ3aXRoLXBhc3NcIl0nKVswXS5jaGVja2VkO1xuICAgICAgICAgICAgaWYgKHdpdGhQYXNzKSB7XG4gICAgICAgICAgICAgICAgZGF0YS5hcHBlbmQoXCJ3aXRoLXBhc3NcIiwgXCJvblwiKTtcbiAgICAgICAgICAgICAgICBkYXRhLmFwcGVuZChcInBhc3NcIiwgZWxlbS5maW5kKCdpbnB1dFtuYW1lPVwicGFzc1wiXScpLnZhbCgpKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgJC5lYWNoKCQoJyNpbXBvcnQtZmlsZScpWzBdLmZpbGVzLCBmdW5jdGlvbiAoaSwgZmlsZSkge1xuICAgICAgICAgICAgICAgIGRhdGEuYXBwZW5kKFwicGFyc2UtZmlsZVwiLCBmaWxlKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgJC5hamF4KHtcbiAgICAgICAgICAgICAgICB1cmw6ICdhY3Rpb24ucGhwJyxcbiAgICAgICAgICAgICAgICB0eXBlOiAnUE9TVCcsXG4gICAgICAgICAgICAgICAgY2FjaGU6IGZhbHNlLFxuICAgICAgICAgICAgICAgIGNvbnRlbnRUeXBlOiBmYWxzZSxcbiAgICAgICAgICAgICAgICBwcm9jZXNzRGF0YTogZmFsc2UsXG4gICAgICAgICAgICAgICAgZGF0YTogZGF0YSxcbiAgICAgICAgICAgICAgICBzdWNjZXNzOiBmdW5jdGlvbiAoZGF0YSkge1xuICAgICAgICAgICAgICAgICAgICBpZiAoZGF0YS5zdWNjZXNzKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoZGF0YS5kYXRhLmltcG9ydGVkID09PSAwKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc25hY2tiYXIoXCJOb3RoaW5nIGhhcyBiZWVuIGltcG9ydGVkLlwiKVxuICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzbmFja2JhcihcIlRoZSBpbXBvcnQgd2FzIHN1Y2Nlc3NmdWwuXCIpXG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBzZXRUaW1lb3V0KFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbG9hZFBhZ2UoXCJwYXNzd29yZF9saXN0XCIpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sIDgwMClcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHNuYWNrYmFyKFwiVGhlcmUgaGFzIGJlZW4gYSBwcm9ibGVtIHdpdGggdGhlIHNlcnZlci4gUGxlYXNlIHRyeSBhZ2FpbiBsYXRlclwiKVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0pO1xuXG4gICAgICAgICQoXCIjcGFnZV91c2VyX3NldHRpbmdzX2Zvcm1fMmZhX3NldHVwXCIpLnN1Ym1pdChmdW5jdGlvbiAoZSkge1xuICAgICAgICAgICAgY29uc3QgbWUgPSAkKHRoaXMpO1xuICAgICAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICAgICAgY29uc3QgbW9kYWxfY29udGVudCA9IG1lLnBhcmVudCgpLnBhcmVudCgpLnBhcmVudCgpLnBhcmVudCgpLnBhcmVudCgpOyAvLyBUT0RPOiBNYWtlIHRoaXMgcHJldHRpZXJcbiAgICAgICAgICAgIGNvbnN0IGJ0biA9IG1vZGFsX2NvbnRlbnQuZmluZChcImJ1dHRvblwiKTtcbiAgICAgICAgICAgIGJ0bi5hdHRyKFwiZGlzYWJsZWRcIiwgXCJcIik7XG4gICAgICAgICAgICByZXF1ZXN0KG1lLnNlcmlhbGl6ZSgpLCBmdW5jdGlvbiAoZGF0YSkge1xuICAgICAgICAgICAgICAgIGJ0bi5hdHRyKFwiZGlzYWJsZWRcIiwgbnVsbCk7XG4gICAgICAgICAgICAgICAgaWYgKGRhdGEuc3VjY2Vzcykge1xuICAgICAgICAgICAgICAgICAgICBtZVswXS5yZXNldCgpO1xuICAgICAgICAgICAgICAgICAgICBtZS5maW5kKFwiaW5wdXQuaGFzdGV4dFwiKS5jaGFuZ2UoKTtcbiAgICAgICAgICAgICAgICAgICAgJCgnI3RhYl8yZmEnKS5maW5kKCdhOmxhc3QnKS5jbGljaygpO1xuICAgICAgICAgICAgICAgICAgICByZWZyZXNoKCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSlcbiAgICAgICAgfSk7XG5cbiAgICAgICAgJChcIiNwYWdlX2xvZ2luX2Zvcm1fbG9naW5cIikuc3VibWl0KGZ1bmN0aW9uIChlKSB7XG4gICAgICAgICAgICBsZXQgbWUgPSAkKHRoaXMpO1xuICAgICAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICAgICAgbGV0IGRhdGEgPSBtZS5zZXJpYWxpemUoKTtcbiAgICAgICAgICAgIG1lLmZpbmQoXCJpbnB1dFwiKS5hdHRyKFwiZGlzYWJsZWRcIiwgXCJkaXNhYmxlZFwiKTtcbiAgICAgICAgICAgIG1lLmZpbmQoXCJidXR0b25cIikuYXR0cihcImRpc2FibGVkXCIsIFwiZGlzYWJsZWRcIik7XG4gICAgICAgICAgICByZXF1ZXN0KGRhdGEsIGZ1bmN0aW9uIChkYXRhKSB7XG4gICAgICAgICAgICAgICAgbGV0IG1vZGFsID0gJChcIiNwYWdlX2xvZ2luX21vZGFsXzJmYVwiKSxcbiAgICAgICAgICAgICAgICAgICAgcmVzZXQgPSB0cnVlO1xuICAgICAgICAgICAgICAgIGlmIChkYXRhLnN1Y2Nlc3MpIHtcbiAgICAgICAgICAgICAgICAgICAgbG9hZFBhZ2UoXCJwYXNzd29yZF9saXN0XCIpO1xuICAgICAgICAgICAgICAgICAgICBtb2RhbC5maW5kKFwiaW5wdXRcIikuYXR0cihcImRpc2FibGVkXCIsIFwiXCIpO1xuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIHN3aXRjaCAoZGF0YS5tc2cpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgXCJhbHJlYWR5X2xvZ2dlZF9pblwiOlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxvYWRQYWdlKFwicGFzc3dvcmRfbGlzdFwiKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgXCJpbnZhbGlkX2NyZWRlbnRpYWxzXCI6XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc25hY2tiYXIoXCJUaGUgZW50ZXJlZCBjcmVkZW50aWFscyBkbyBub3QgbWF0Y2ggYW55IGFjY291bnQuXCIpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSBcInR3b19mYWN0b3JfbmVlZGVkXCI6XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbW9kYWwuZmluZChcImlucHV0XCIpLmF0dHIoXCJkaXNhYmxlZFwiLCBudWxsKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBtb2RhbC5tb2RhbChcInNob3dcIik7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVzZXQgPSBmYWxzZTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgXCJpbnZhbGlkX2NvZGVcIjpcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzbmFja2JhcihcIlRoZSBlbnRlcmVkIHR3by1mYWN0b3ItYXV0aGVudGljYXRpb24gY29kZSBpcyBpbnZhbGlkIVwiKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBtb2RhbC5maW5kKFwiaW5wdXRcIikuYXR0cihcImRpc2FibGVkXCIsIG51bGwpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlc2V0ID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgICAgICAgICBjYXNlIFwiaW52YWxpZF91c2VybmFtZVwiOlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNuYWNrYmFyKFwiVGhlIHVzZXJuYW1lIGlzIHRvbyBzaG9ydC5cIik7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgICAgICAgICBjYXNlIFwiaW52YWxpZF9wYXNzd29yZFwiOlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNuYWNrYmFyKFwiVGhlIHBhc3N3b3JkIGlzIHRvbyBzaG9ydC5cIik7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKHJlc2V0KVxuICAgICAgICAgICAgICAgICAgICBtZVswXS5yZXNldCgpO1xuICAgICAgICAgICAgICAgIG1lLmZpbmQoXCJpbnB1dFwiKS5jaGFuZ2UoKTtcblxuICAgICAgICAgICAgICAgIG1lLmZpbmQoXCJpbnB1dFwiKS5ub3QoXCIubW9kYWwgaW5wdXRcIikuYXR0cihcImRpc2FibGVkXCIsIG51bGwpO1xuICAgICAgICAgICAgICAgIG1lLmZpbmQoXCJidXR0b25cIikuYXR0cihcImRpc2FibGVkXCIsIG51bGwpO1xuICAgICAgICAgICAgfSwgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIHNuYWNrYmFyKFwiVGhlcmUgaGFzIGJlZW4gYSBwcm9ibGVtIHdpdGggdGhlIHNlcnZlci5cIik7XG4gICAgICAgICAgICAgICAgbWVbMF0ucmVzZXQoKTtcbiAgICAgICAgICAgICAgICBtZS5maW5kKFwiaW5wdXRcIikuY2hhbmdlKCk7XG4gICAgICAgICAgICAgICAgbWUuZmluZChcImlucHV0XCIpLmF0dHIoXCJkaXNhYmxlZFwiLCBudWxsKTtcbiAgICAgICAgICAgICAgICBtZS5maW5kKFwiYnV0dG9uXCIpLmF0dHIoXCJkaXNhYmxlZFwiLCBudWxsKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9KTtcblxuICAgICAgICAkKFwiI3BhZ2VfcmVnaXN0ZXJfZm9ybV9yZWdpc3RlclwiKS5zdWJtaXQoZnVuY3Rpb24gKGUpIHtcbiAgICAgICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgICAgIGNvbnN0IG1lID0gJCh0aGlzKSxcbiAgICAgICAgICAgICAgICBkYXRhID0gbWUuc2VyaWFsaXplKCk7XG4gICAgICAgICAgICBtZS5maW5kKFwiaW5wdXRcIikuYXR0cihcImRpc2FibGVkXCIsIFwiZGlzYWJsZWRcIik7XG4gICAgICAgICAgICBtZS5maW5kKFwiYnV0dG9uXCIpLmF0dHIoXCJkaXNhYmxlZFwiLCBcImRpc2FibGVkXCIpO1xuICAgICAgICAgICAgcmVxdWVzdChkYXRhLCBmdW5jdGlvbiAoZGF0YSkge1xuICAgICAgICAgICAgICAgIGlmIChkYXRhLnN1Y2Nlc3MpIHtcbiAgICAgICAgICAgICAgICAgICAgbG9hZFBhZ2UoXCJsb2dpblwiKTtcbiAgICAgICAgICAgICAgICAgICAgc25hY2tiYXIoXCJZb3VyIGFjY291bnQgaGFzIGJlZW4gY3JlYXRlZC4gWW91IG1heSBsb2cgaW4uXCIpXG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgc3dpdGNoIChkYXRhLm1zZykge1xuICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSBcImFscmVhZHlfbG9nZ2VkX2luXCI6XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbG9hZFBhZ2UoXCJwYXNzd29yZF9saXN0XCIpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSBcInBhc3N3b3Jkc19ub3RfbWF0Y2hpbmdcIjpcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzbmFja2JhcihcIlRoZSBlbnRlcmVkIHBhc3N3b3JkcyBkbyBub3QgbWF0Y2guXCIpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSBcInJlY2FwdGNoYV9mYWlsXCI6XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc25hY2tiYXIoXCJDYXB0Y2hhIGNvdWxkIG5vdCBiZSB2ZXJpZmllZC5cIik7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgICAgICAgICBjYXNlIFwidXNlcm5hbWVfZXhpc3RzXCI6XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc25hY2tiYXIoXCJUaGUgdXNlcm5hbWUgaXMgb2NjdXBpZWQuXCIpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSBcImludmFsaWRfdXNlcm5hbWVcIjpcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzbmFja2JhcihcIlRoZSB1c2VybmFtZSBpcyB0b28gc2hvcnQuXCIpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSBcImludmFsaWRfcGFzc3dvcmRcIjpcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzbmFja2JhcihcIlRoZSBwYXNzd29yZCBpcyB0b28gc2hvcnQuXCIpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIG1lWzBdLnJlc2V0KCk7XG4gICAgICAgICAgICAgICAgbWUuZmluZChcImlucHV0XCIpLmNoYW5nZSgpO1xuICAgICAgICAgICAgICAgIG1lLmZpbmQoXCJpbnB1dFwiKS5hdHRyKFwiZGlzYWJsZWRcIiwgbnVsbCk7XG4gICAgICAgICAgICAgICAgbWUuZmluZChcImJ1dHRvblwiKS5hdHRyKFwiZGlzYWJsZWRcIiwgbnVsbCk7XG5cbiAgICAgICAgICAgICAgICBpZiAoIWdyZWNhcHRjaGEpXG4gICAgICAgICAgICAgICAgICAgIGdyZWNhcHRjaGEucmVzZXQoKTtcbiAgICAgICAgICAgIH0sIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICBzbmFja2JhcihcIlRoZXJlIGhhcyBiZWVuIGEgcHJvYmxlbSB3aXRoIHRoZSBzZXJ2ZXIuXCIpO1xuICAgICAgICAgICAgICAgIG1lWzBdLnJlc2V0KCk7XG4gICAgICAgICAgICAgICAgbWUuZmluZChcImlucHV0XCIpLmNoYW5nZSgpO1xuICAgICAgICAgICAgICAgIG1lLmZpbmQoXCJpbnB1dFwiKS5hdHRyKFwiZGlzYWJsZWRcIiwgbnVsbCk7XG4gICAgICAgICAgICAgICAgbWUuZmluZChcImJ1dHRvblwiKS5hdHRyKFwiZGlzYWJsZWRcIiwgbnVsbCk7XG5cbiAgICAgICAgICAgICAgICBpZiAoIWdyZWNhcHRjaGEpXG4gICAgICAgICAgICAgICAgICAgIGdyZWNhcHRjaGEucmVzZXQoKTtcbiAgICAgICAgICAgIH0pXG4gICAgICAgIH0pO1xuXG4gICAgICAgICQoXCIjcGFnZV9wYXNzd29yZF9saXN0X2Zvcm1fYWRkXCIpLnN1Ym1pdChmdW5jdGlvbiAoZSkge1xuICAgICAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICAgICAgY29uc3QgbWUgPSAkKHRoaXMpLFxuICAgICAgICAgICAgICAgIGJ0biA9IG1lLmZpbmQoXCJidXR0b25cIik7XG4gICAgICAgICAgICBidG4uYXR0cihcImRpc2FibGVkXCIsIFwiXCIpO1xuICAgICAgICAgICAgcmVxdWVzdChtZS5zZXJpYWxpemUoKSwgZnVuY3Rpb24gKGRhdGEpIHtcbiAgICAgICAgICAgICAgICBidG4uYXR0cihcImRpc2FibGVkXCIsIG51bGwpO1xuICAgICAgICAgICAgICAgIGlmIChkYXRhLnN1Y2Nlc3MpIHtcbiAgICAgICAgICAgICAgICAgICAgbWVbMF0ucmVzZXQoKTtcbiAgICAgICAgICAgICAgICAgICAgbWUuZmluZChcImlucHV0Lmhhc3RleHRcIikucmVtb3ZlQ2xhc3MoXCJoYXN0ZXh0XCIpO1xuICAgICAgICAgICAgICAgICAgICByZWZyZXNoKCk7XG4gICAgICAgICAgICAgICAgICAgIGhpZGVBbGxNb2RhbHMoKTtcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBzbmFja2JhcihcIlRoZXJlIGhhcyBiZWVuIGEgcHJvYmxlbSB3aXRoIHRoZSBzZXJ2ZXIuIFBsZWFzZSB0cnkgYWdhaW4gbGF0ZXJcIik7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSlcbiAgICAgICAgfSk7XG5cbiAgICAgICAgJChcIiNwYWdlX3Bhc3N3b3JkX2xpc3RfZm9ybV9lZGl0XCIpLnN1Ym1pdChmdW5jdGlvbiAoZSkge1xuICAgICAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICAgICAgY29uc3QgbWUgPSAkKHRoaXMpLFxuICAgICAgICAgICAgICAgIGJ0biA9IG1lLmZpbmQoXCJidXR0b25cIik7XG4gICAgICAgICAgICBidG4uYXR0cihcImRpc2FibGVkXCIsIFwiXCIpO1xuICAgICAgICAgICAgcmVxdWVzdChtZS5zZXJpYWxpemUoKSwgZnVuY3Rpb24gKGRhdGEpIHtcbiAgICAgICAgICAgICAgICBidG4uYXR0cihcImRpc2FibGVkXCIsIG51bGwpO1xuICAgICAgICAgICAgICAgIGlmIChkYXRhLnN1Y2Nlc3MpIHtcbiAgICAgICAgICAgICAgICAgICAgbWVbMF0ucmVzZXQoKTtcbiAgICAgICAgICAgICAgICAgICAgbWUuZmluZChcImlucHV0XCIpLmNoYW5nZSgpO1xuICAgICAgICAgICAgICAgICAgICByZWZyZXNoKCk7XG4gICAgICAgICAgICAgICAgICAgIGhpZGVBbGxNb2RhbHMoKTtcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBzbmFja2JhcihcIlRoZXJlIGhhcyBiZWVuIGEgcHJvYmxlbSB3aXRoIHRoZSBzZXJ2ZXIuIFBsZWFzZSB0cnkgYWdhaW4gbGF0ZXJcIilcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KVxuICAgICAgICB9KTtcblxuICAgICAgICAkKFwiI3BhZ2VfdXNlcl9zZXR0aW5nc19mb3JtX2NoYW5nZV9wYXNzd29yZFwiKS5zdWJtaXQoZnVuY3Rpb24gKGUpIHtcbiAgICAgICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgICAgIGNvbnN0IG1lID0gJCh0aGlzKSxcbiAgICAgICAgICAgICAgICBidG4gPSBtZS5maW5kKFwiYnV0dG9uXCIpO1xuICAgICAgICAgICAgYnRuLmF0dHIoXCJkaXNhYmxlZFwiLCBcIlwiKTtcblxuICAgICAgICAgICAgcmVxdWVzdChtZS5zZXJpYWxpemUoKSwgZnVuY3Rpb24gKGRhdGEpIHtcbiAgICAgICAgICAgICAgICBidG4uYXR0cihcImRpc2FibGVkXCIsIG51bGwpO1xuICAgICAgICAgICAgICAgIGlmIChkYXRhLnN1Y2Nlc3MpIHtcbiAgICAgICAgICAgICAgICAgICAgbWVbMF0ucmVzZXQoKTtcbiAgICAgICAgICAgICAgICAgICAgbWUuZmluZChcImlucHV0XCIpLmNoYW5nZSgpO1xuICAgICAgICAgICAgICAgICAgICBkb0xvZ291dCgpO1xuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChkYXRhLm1zZyA9PT0gXCJpbnZhbGlkX2NyZWRlbnRpYWxzXCIpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHNuYWNrYmFyKFwiWW91ciBjdXJyZW50IHBhc3N3b3JkIGlzIG5vdCBjb3JyZWN0LlwiKVxuICAgICAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKGRhdGEubXNnID09PSBcInBhc3N3b3Jkc19ub3RfbWF0Y2hpbmdcIikge1xuICAgICAgICAgICAgICAgICAgICAgICAgc25hY2tiYXIoXCJZb3VyIG5ldyBwYXNzd29yZHMgZG8gbm90IG1hdGNoLlwiKVxuICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgc25hY2tiYXIoXCJUaGVyZSBoYXMgYmVlbiBhIHByb2JsZW0gd2l0aCB0aGUgc2VydmVyLiBQbGVhc2UgdHJ5IGFnYWluIGxhdGVyXCIpXG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSk7XG5cbiAgICAgICAgJChcIiNwYWdlX3VzZXJfc2V0dGluZ3NfZm9ybV8yZmFfZGlzYWJsZVwiKS5zdWJtaXQoZnVuY3Rpb24gKGUpIHtcbiAgICAgICAgICAgIGNvbnN0IG1lID0gJCh0aGlzKSxcbiAgICAgICAgICAgICAgICBzdWJtaXRCdG4gPSBtZS5kYXRhKFwic3VibWl0LWJ0blwiKTtcbiAgICAgICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgICAgIHN1Ym1pdEJ0bi5hdHRyKFwiZGlzYWJsZWRcIiwgXCJcIik7XG5cbiAgICAgICAgICAgIHJlcXVlc3QobWUuc2VyaWFsaXplKCksIGZ1bmN0aW9uIChkYXRhKSB7XG4gICAgICAgICAgICAgICAgc3VibWl0QnRuLmF0dHIoXCJkaXNhYmxlZFwiLCBudWxsKTtcbiAgICAgICAgICAgICAgICBpZiAoZGF0YS5zdWNjZXNzKSB7XG4gICAgICAgICAgICAgICAgICAgIG1lWzBdLnJlc2V0KCk7XG4gICAgICAgICAgICAgICAgICAgIG1lLmZpbmQoXCJpbnB1dFwiKS5jaGFuZ2UoKTtcbiAgICAgICAgICAgICAgICAgICAgc25hY2tiYXIoXCJUd28tZmFjdG9yLWF1dGhlbnRpY2F0aW9uIGhhcyBiZWVuIGRpc2FibGVkIVwiKTtcbiAgICAgICAgICAgICAgICAgICAgcmVmcmVzaCgpO1xuICAgICAgICAgICAgICAgICAgICBoaWRlQWxsTW9kYWxzKCk7XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGRhdGEubXNnID09PSBcImludmFsaWRfY29kZVwiKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBzbmFja2JhcihcIlRoZSBlbnRlcmVkIHR3by1mYWN0b3ItYXV0aGVudGljYXRpb24gY29kZSBpcyBpbnZhbGlkIVwiKVxuICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgc25hY2tiYXIoXCJUaGVyZSBoYXMgYmVlbiBhIHByb2JsZW0gd2l0aCB0aGUgc2VydmVyLiBQbGVhc2UgdHJ5IGFnYWluIGxhdGVyXCIpXG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSk7XG5cbiAgICAgICAgJChcIiNwYWdlX3VzZXJfc2V0dGluZ3NfZm9ybV9jaGFuZ2VfdXNlcm5hbWVcIikuc3VibWl0KGZ1bmN0aW9uIChlKSB7XG4gICAgICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgICBjb25zdCBtZSA9ICQodGhpcyksXG4gICAgICAgICAgICAgICAgYnRuID0gbWUuZmluZChcImJ1dHRvblwiKTtcbiAgICAgICAgICAgIGJ0bi5hdHRyKFwiZGlzYWJsZWRcIiwgXCJcIik7XG5cbiAgICAgICAgICAgIHJlcXVlc3QobWUuc2VyaWFsaXplKCksIGZ1bmN0aW9uIChkYXRhKSB7XG4gICAgICAgICAgICAgICAgYnRuLmF0dHIoXCJkaXNhYmxlZFwiLCBudWxsKTtcbiAgICAgICAgICAgICAgICBpZiAoZGF0YS5zdWNjZXNzKSB7XG4gICAgICAgICAgICAgICAgICAgIG1lWzBdLnJlc2V0KCk7XG4gICAgICAgICAgICAgICAgICAgIG1lLmZpbmQoXCJpbnB1dFwiKS5jaGFuZ2UoKTtcbiAgICAgICAgICAgICAgICAgICAgZG9Mb2dvdXQoKTtcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBpZiAoZGF0YS5tc2cgPT09IFwidXNlcm5hbWVfZXhpc3RzXCIpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHNuYWNrYmFyKFwiVGhlIHVzZXJuYW1lIGlzIG9jY3VwaWVkLlwiKVxuICAgICAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKGRhdGEubXNnID09PSBcImludmFsaWRfY3JlZGVudGlhbHNcIikge1xuICAgICAgICAgICAgICAgICAgICAgICAgc25hY2tiYXIoXCJZb3VyIGN1cnJlbnQgcGFzc3dvcmQgaXMgbm90IGNvcnJlY3QuXCIpXG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBzbmFja2JhcihcIlRoZXJlIGhhcyBiZWVuIGEgcHJvYmxlbSB3aXRoIHRoZSBzZXJ2ZXIuIFBsZWFzZSB0cnkgYWdhaW4gbGF0ZXJcIilcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9KTtcblxuICAgICAgICAkKFwiI2J0bkxvZ291dFwiKS5jbGljayhmdW5jdGlvbiAoZSkge1xuICAgICAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICAgICAgZG9Mb2dvdXQoKTtcbiAgICAgICAgfSk7XG5cbiAgICAgICAgLy9QQVNTV09SRCBBQ1RJT05TXG4gICAgICAgIHBhc3N3b3JkVGFibGUub24oJ2NsaWNrJywgJypbZGF0YS1wYXNzd29yZC1hY3Rpb249XCJzaG93XCJdJywgZnVuY3Rpb24gKGUpIHtcbiAgICAgICAgICAgIGNvbnN0IG1lID0gJCh0aGlzKSxcbiAgICAgICAgICAgICAgICBwYXNzd29yZElkID0gbWUuZGF0YShcInBhc3N3b3JkLWlkXCIpLFxuICAgICAgICAgICAgICAgIHBhcmVudCA9IG1lLnBhcmVudCgpO1xuICAgICAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICAgICAgbWUuYXR0cihcImRpc2FibGVkXCIsIFwiXCIpO1xuICAgICAgICAgICAgbWUuaHRtbChzcGlubmVyU1ZHKTtcbiAgICAgICAgICAgIHJlcXVlc3QoXCJhPXBhc3N3b3JkL3F1ZXJ5JmlkPVwiICsgZW5jb2RlVVJJQ29tcG9uZW50KHBhc3N3b3JkSWQpLCBmdW5jdGlvbiAoZGF0YSkge1xuICAgICAgICAgICAgICAgIGlmIChkYXRhLnN1Y2Nlc3MpIHtcbiAgICAgICAgICAgICAgICAgICAgcGFyZW50Lmh0bWwoXCI8c3BhbiBjbGFzcz0nZm9yY2Utc2VsZWN0IG5vLWNvbnRleHRtZW51Jz5cIiArIGRhdGEuZGF0YS5wYXNzd29yZC5zYWZlICsgXCI8L3NwYW4+XCIpO1xuICAgICAgICAgICAgICAgICAgICB0aW1lb3V0UGFzc3dvcmQocGFyZW50LCBwYXNzd29yZElkKTtcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBtZS5odG1sKFwiPGkgY2xhc3M9J21hdGVyaWFsLWljb25zJz5lcnJvcjwvaT5cIik7XG4gICAgICAgICAgICAgICAgICAgIHNuYWNrYmFyKFwiVGhlcmUgaGFzIGJlZW4gYSBwcm9ibGVtIHdpdGggdGhlIHNlcnZlci4gUGxlYXNlIHRyeSBhZ2FpbiBsYXRlclwiKVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0sIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICBtZS5odG1sKFwiPGkgY2xhc3M9J21hdGVyaWFsLWljb25zJz5lcnJvcjwvaT5cIik7XG4gICAgICAgICAgICAgICAgc25hY2tiYXIoXCJUaGVyZSBoYXMgYmVlbiBhIHByb2JsZW0gd2l0aCB0aGUgc2VydmVyLiBQbGVhc2UgdHJ5IGFnYWluIGxhdGVyXCIpXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSk7XG5cblxuICAgICAgICBwYXNzd29yZFRhYmxlLm9uKCdjbGljaycsICcqW2RhdGEtcGFzc3dvcmQtYWN0aW9uPVwiY29weVwiXScsIGZ1bmN0aW9uIChlKSB7XG4gICAgICAgICAgICBjb25zdCBtZSA9ICQodGhpcyksXG4gICAgICAgICAgICAgICAgcGFzc3dvcmRJZCA9IG1lLmRhdGEoXCJwYXNzd29yZC1pZFwiKTtcbiAgICAgICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgICAgIG1lLmF0dHIoXCJkaXNhYmxlZFwiLCBcIlwiKTtcbiAgICAgICAgICAgIG1lLmh0bWwoc3Bpbm5lclNWRyk7XG4gICAgICAgICAgICByZXF1ZXN0KFwiYT1wYXNzd29yZC9xdWVyeSZpZD1cIiArIGVuY29kZVVSSUNvbXBvbmVudChwYXNzd29yZElkKSwgZnVuY3Rpb24gKGRhdGEpIHtcbiAgICAgICAgICAgICAgICBpZiAoZGF0YS5zdWNjZXNzKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvcHlUb0NsaXBib2FyZChkYXRhLmRhdGEucGFzc3dvcmQucmF3KTtcbiAgICAgICAgICAgICAgICAgICAgbWUuYXR0cihcImRpc2FibGVkXCIsIG51bGwpO1xuICAgICAgICAgICAgICAgICAgICBtZS5odG1sKFwiPGkgY2xhc3M9J21hdGVyaWFsLWljb25zJz5jb250ZW50X2NvcHk8L2k+XCIpO1xuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIG1lLmh0bWwoXCI8aSBjbGFzcz0nbWF0ZXJpYWwtaWNvbnMnPmVycm9yPC9pPlwiKTtcbiAgICAgICAgICAgICAgICAgICAgc25hY2tiYXIoXCJUaGVyZSBoYXMgYmVlbiBhIHByb2JsZW0gd2l0aCB0aGUgc2VydmVyLiBQbGVhc2UgdHJ5IGFnYWluIGxhdGVyXCIpXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSwgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIG1lLmh0bWwoXCI8aSBjbGFzcz0nbWF0ZXJpYWwtaWNvbnMnPmVycm9yPC9pPlwiKTtcbiAgICAgICAgICAgICAgICBzbmFja2JhcihcIlRoZXJlIGhhcyBiZWVuIGEgcHJvYmxlbSB3aXRoIHRoZSBzZXJ2ZXIuIFBsZWFzZSB0cnkgYWdhaW4gbGF0ZXJcIilcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9KTtcblxuICAgICAgICBwYXNzd29yZFRhYmxlLm9uKCdjbGljaycsICcqW2RhdGEtcGFzc3dvcmQtYWN0aW9uPVwiZWRpdFwiXScsIGZ1bmN0aW9uIChlKSB7XG4gICAgICAgICAgICBjb25zdCBtZSA9ICQodGhpcyksXG4gICAgICAgICAgICAgICAgcGFzc3dvcmRJZCA9IG1lLmRhdGEoXCJwYXNzd29yZC1pZFwiKSxcbiAgICAgICAgICAgICAgICB0YXJnZXRGb3JtID0gJChcIiNwYWdlX3Bhc3N3b3JkX2xpc3RfZm9ybV9lZGl0XCIpO1xuICAgICAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICAgICAgbWUuYXR0cihcImRpc2FibGVkXCIsIFwiXCIpO1xuICAgICAgICAgICAgbWUuaHRtbChzcGlubmVyU1ZHKTtcbiAgICAgICAgICAgIHJlcXVlc3QoXCJhPXBhc3N3b3JkL3F1ZXJ5JmlkPVwiICsgZW5jb2RlVVJJQ29tcG9uZW50KHBhc3N3b3JkSWQpLCBmdW5jdGlvbiAoZGF0YSkge1xuICAgICAgICAgICAgICAgIGlmIChkYXRhLnN1Y2Nlc3MpIHtcbiAgICAgICAgICAgICAgICAgICAgbWUuaHRtbChcIjxpIGNsYXNzPSdtYXRlcmlhbC1pY29ucyc+ZWRpdDwvaT5cIik7XG4gICAgICAgICAgICAgICAgICAgIG1lLmF0dHIoXCJkaXNhYmxlZFwiLCBudWxsKTtcbiAgICAgICAgICAgICAgICAgICAgdGFyZ2V0Rm9ybS5maW5kKFwiaW5wdXRbbmFtZT0naWQnXVwiKS52YWwocGFzc3dvcmRJZCk7XG4gICAgICAgICAgICAgICAgICAgIHRhcmdldEZvcm0uZmluZChcImlucHV0W25hbWU9J3VzZXJuYW1lJ11cIikudmFsKGRhdGEuZGF0YS51c2VybmFtZS5yYXcpLmNoYW5nZSgpO1xuICAgICAgICAgICAgICAgICAgICB0YXJnZXRGb3JtLmZpbmQoXCJpbnB1dFtuYW1lPSdwYXNzd29yZCddXCIpLnZhbChkYXRhLmRhdGEucGFzc3dvcmQucmF3KS5jaGFuZ2UoKTtcbiAgICAgICAgICAgICAgICAgICAgdGFyZ2V0Rm9ybS5maW5kKFwiaW5wdXRbbmFtZT0nZGVzY3JpcHRpb24nXVwiKS52YWwoZGF0YS5kYXRhLmRlc2NyaXB0aW9uLnJhdykuY2hhbmdlKCk7XG4gICAgICAgICAgICAgICAgICAgICQoXCIjcGFnZV9wYXNzd29yZF9saXN0X21vZGFsX2VkaXRcIikubW9kYWwoXCJzaG93XCIpO1xuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIHNuYWNrYmFyKFwiVGhlcmUgaGFzIGJlZW4gYSBwcm9ibGVtIHdpdGggdGhlIHNlcnZlci4gUGxlYXNlIHRyeSBhZ2FpbiBsYXRlclwiKVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0sIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICBzbmFja2JhcihcIlRoZXJlIGhhcyBiZWVuIGEgcHJvYmxlbSB3aXRoIHRoZSBzZXJ2ZXIuIFBsZWFzZSB0cnkgYWdhaW4gbGF0ZXJcIilcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9KTtcblxuICAgICAgICBwYXNzd29yZFRhYmxlLm9uKCdjbGljaycsICcqW2RhdGEtcGFzc3dvcmQtYWN0aW9uPVwiYXJjaGl2ZVwiXScsIGZ1bmN0aW9uIChlKSB7XG4gICAgICAgICAgICBjb25zdCBtZSA9ICQodGhpcyksXG4gICAgICAgICAgICAgICAgcGFzc3dvcmRJZCA9IG1lLmRhdGEoXCJwYXNzd29yZC1pZFwiKTtcbiAgICAgICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgICAgIG1lLmF0dHIoXCJkaXNhYmxlZFwiLCBcIlwiKTtcbiAgICAgICAgICAgIG1lLmh0bWwoc3Bpbm5lclNWRyk7XG4gICAgICAgICAgICByZXF1ZXN0KFwiYT1wYXNzd29yZC9hcmNoaXZlJmlkPVwiICsgZW5jb2RlVVJJQ29tcG9uZW50KHBhc3N3b3JkSWQpLCBmdW5jdGlvbiAoZGF0YSkge1xuICAgICAgICAgICAgICAgIGlmIChkYXRhLnN1Y2Nlc3MpIHtcbiAgICAgICAgICAgICAgICAgICAgcmVmcmVzaCgpO1xuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIHNuYWNrYmFyKFwiVGhlcmUgaGFzIGJlZW4gYSBwcm9ibGVtIHdpdGggdGhlIHNlcnZlci4gUGxlYXNlIHRyeSBhZ2FpbiBsYXRlclwiKVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0sIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICBzbmFja2JhcihcIlRoZXJlIGhhcyBiZWVuIGEgcHJvYmxlbSB3aXRoIHRoZSBzZXJ2ZXIuIFBsZWFzZSB0cnkgYWdhaW4gbGF0ZXJcIilcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9KTtcblxuICAgICAgICBhcmNoaXZlZFBhc3N3b3JkVGFibGUub24oJ2NsaWNrJywgJypbZGF0YS1wYXNzd29yZC1hY3Rpb249XCJyZXN0b3JlXCJdJywgZnVuY3Rpb24gKGUpIHtcbiAgICAgICAgICAgIGNvbnN0IG1lID0gJCh0aGlzKSxcbiAgICAgICAgICAgICAgICBwYXNzd29yZElkID0gbWUuZGF0YShcInBhc3N3b3JkLWlkXCIpO1xuICAgICAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICAgICAgbWUuYXR0cihcImRpc2FibGVkXCIsIFwiXCIpO1xuICAgICAgICAgICAgbWUuaHRtbChzcGlubmVyU1ZHKTtcbiAgICAgICAgICAgIHJlcXVlc3QoXCJhPXBhc3N3b3JkL3Jlc3RvcmUmaWQ9XCIgKyBlbmNvZGVVUklDb21wb25lbnQocGFzc3dvcmRJZCksIGZ1bmN0aW9uIChkYXRhKSB7XG4gICAgICAgICAgICAgICAgaWYgKGRhdGEuc3VjY2Vzcykge1xuICAgICAgICAgICAgICAgICAgICByZWZyZXNoKCk7XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgbWUuaHRtbChcIjxpIGNsYXNzPSdtYXRlcmlhbC1pY29ucyc+ZXJyb3I8L2k+XCIpO1xuICAgICAgICAgICAgICAgICAgICBzbmFja2JhcihcIlRoZXJlIGhhcyBiZWVuIGEgcHJvYmxlbSB3aXRoIHRoZSBzZXJ2ZXIuIFBsZWFzZSB0cnkgYWdhaW4gbGF0ZXJcIilcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9LCBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgbWUuaHRtbChcIjxpIGNsYXNzPSdtYXRlcmlhbC1pY29ucyc+ZXJyb3I8L2k+XCIpO1xuICAgICAgICAgICAgICAgIHNuYWNrYmFyKFwiVGhlcmUgaGFzIGJlZW4gYSBwcm9ibGVtIHdpdGggdGhlIHNlcnZlci4gUGxlYXNlIHRyeSBhZ2FpbiBsYXRlclwiKVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0pO1xuXG4gICAgICAgIGFyY2hpdmVkUGFzc3dvcmRUYWJsZS5vbignY2xpY2snLCAnKltkYXRhLXBhc3N3b3JkLWFjdGlvbj1cImRlbGV0ZVwiXScsIGZ1bmN0aW9uIChlKSB7XG4gICAgICAgICAgICBjb25zdCBtZSA9ICQodGhpcyksXG4gICAgICAgICAgICAgICAgcGFzc3dvcmRJZCA9IG1lLmRhdGEoXCJwYXNzd29yZC1pZFwiKTtcbiAgICAgICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgICAgIG1lLmF0dHIoXCJkaXNhYmxlZFwiLCBcIlwiKTtcbiAgICAgICAgICAgIG1lLmh0bWwoc3Bpbm5lclNWRyk7XG4gICAgICAgICAgICByZXF1ZXN0KFwiYT1wYXNzd29yZC9kZWxldGUmaWQ9XCIgKyBlbmNvZGVVUklDb21wb25lbnQocGFzc3dvcmRJZCksIGZ1bmN0aW9uIChkYXRhKSB7XG4gICAgICAgICAgICAgICAgaWYgKGRhdGEuc3VjY2Vzcykge1xuICAgICAgICAgICAgICAgICAgICByZWZyZXNoKCk7XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgbWUuaHRtbChcIjxpIGNsYXNzPSdtYXRlcmlhbC1pY29ucyc+ZXJyb3I8L2k+XCIpO1xuICAgICAgICAgICAgICAgICAgICBzbmFja2JhcihcIlRoZXJlIGhhcyBiZWVuIGEgcHJvYmxlbSB3aXRoIHRoZSBzZXJ2ZXIuIFBsZWFzZSB0cnkgYWdhaW4gbGF0ZXJcIilcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9LCBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgbWUuaHRtbChcIjxpIGNsYXNzPSdtYXRlcmlhbC1pY29ucyc+ZXJyb3I8L2k+XCIpO1xuICAgICAgICAgICAgICAgIHNuYWNrYmFyKFwiVGhlcmUgaGFzIGJlZW4gYSBwcm9ibGVtIHdpdGggdGhlIHNlcnZlci4gUGxlYXNlIHRyeSBhZ2FpbiBsYXRlclwiKVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0pO1xuXG4gICAgICAgIC8vIE1PREFMU1xuICAgICAgICAkKCcubW9kYWwnKS5vbignc2hvd24uYnMubW9kYWwnLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICBjb25zdCBtZSA9ICQodGhpcyk7XG4gICAgICAgICAgICBtZS5maW5kKCdpbnB1dFt0eXBlPXRleHRdLHRleHRhcmVhLHNlbGVjdCcpLmZpbHRlcignOnZpc2libGU6Zmlyc3QnKS5mb2N1cygpO1xuICAgICAgICB9KTtcblxuICAgICAgICAkKCcjcGFnZV91c2VyX3NldHRpbmdzX21vZGFsXzJmYV9zZXR1cCcpLm9uKCdzaG93LmJzLm1vZGFsJywgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgY29uc3QgbWUgPSAkKHRoaXMpO1xuICAgICAgICAgICAgJCgnI3RhYl8yZmEnKS5maW5kKCdhOmZpcnN0JykudGFiKCdzaG93Jyk7XG4gICAgICAgICAgICBtZS5maW5kKFwiZm9ybVwiKS5lYWNoKGZ1bmN0aW9uIChpLCBlbGVtKSB7XG4gICAgICAgICAgICAgICAgZWxlbS5yZXNldCgpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAkKFwiI2J0bl8yZmFfbmV4dFwiKS5zaG93KCk7XG4gICAgICAgICAgICAkKFwiI2J0bl8yZmFfZW5hYmxlX3N1Ym1pdFwiKS5oaWRlKCk7XG4gICAgICAgICAgICAkKFwiI2J0bl8yZmFfZmluaXNoXCIpLmhpZGUoKTtcbiAgICAgICAgICAgIHJlcXVlc3QoXCJhPXVzZXIvMmZhR2VuZXJhdGVLZXlcIiwgZnVuY3Rpb24gKGRhdGEpIHtcbiAgICAgICAgICAgICAgICBpZiAoZGF0YS5zdWNjZXNzKSB7XG4gICAgICAgICAgICAgICAgICAgICQoXCIjcHJlXzJmYV9rZXlcIikudGV4dChkYXRhLmRhdGEucHJpdmF0ZUtleSk7XG4gICAgICAgICAgICAgICAgICAgICQoXCIjcHJlXzJmYV9rZXkyXCIpLnRleHQoZGF0YS5kYXRhLnByaXZhdGVLZXkpO1xuICAgICAgICAgICAgICAgICAgICAkKFwiI2ltZ18yZmFfa2V5XCIpLmF0dHIoXCJzcmNcIiwgZGF0YS5kYXRhLnFyQ29kZVVybCk7XG4gICAgICAgICAgICAgICAgICAgIG1lLmZpbmQoXCJpbnB1dFtuYW1lPScyZmFQcml2YXRlS2V5J11cIikudmFsKGRhdGEuZGF0YS5wcml2YXRlS2V5KS5jaGFuZ2UoKTtcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBzbmFja2JhcihcIlRoZXJlIGhhcyBiZWVuIGEgcHJvYmxlbSB3aXRoIHRoZSBzZXJ2ZXIuIFBsZWFzZSB0cnkgYWdhaW4gbGF0ZXJcIilcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcblxuICAgICAgICB9KVxuICAgIH0gLy8gRU5EIHJlZ2lzdGVyUGFnZUxpc3RlbmVycygpXG5cblxuLy8jIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyNcbi8vUEFHRSBTUEVDSUZJQyBNRVRIT0RTXG4vLyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjI1xuXG4gICAgZnVuY3Rpb24gdGltZW91dFBhc3N3b3JkKHBhc3N3b3JkT2JqZWN0LCBwYXNzd29yZElkKSB7XG4gICAgICAgIHBhc3N3b3JkT2JqZWN0LmFwcGVuZChcIiZuYnNwOzxzcGFuIGlkPSd0aW1lTGVmdF9cIiArIHBhc3N3b3JkSWQgKyBcIicgY2xhc3M9J3RleHQtbXV0ZWQnPjwvc3Bhbj5cIik7XG4gICAgICAgIGxldCB0aW1lTGVmdCA9IDYwO1xuICAgICAgICBjb25zdCB0aW1lTGVmdERpc3BsYXkgPSBwYXNzd29yZE9iamVjdC5maW5kKFwiI3RpbWVMZWZ0X1wiICsgcGFzc3dvcmRJZCk7XG5cbiAgICAgICAgY29uc3QgdGltZXIgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICB0aW1lTGVmdERpc3BsYXkuaHRtbCh0aW1lTGVmdCk7XG4gICAgICAgICAgICBpZiAodGltZUxlZnQgPT09IDEwKSB7XG4gICAgICAgICAgICAgICAgdGltZUxlZnREaXNwbGF5LmFkZENsYXNzKFwidGV4dC1kYW5nZXJcIik7XG4gICAgICAgICAgICAgICAgdGltZUxlZnREaXNwbGF5LnJlbW92ZUNsYXNzKFwidGV4dC1tdXRlZFwiKTtcbiAgICAgICAgICAgIH0gZWxzZSBpZiAodGltZUxlZnQgPT09IDApIHtcbiAgICAgICAgICAgICAgICBjbGVhckludGVydmFsKHRpbWVySWQpO1xuICAgICAgICAgICAgICAgIHBhc3N3b3JkT2JqZWN0Lmh0bWwoXCI8YnV0dG9uIGNsYXNzPSdidG4gYnRuLWRlZmF1bHQgYnRuLWZsYXQgYnRuLWJsb2NrJyBkYXRhLXBhc3N3b3JkLWFjdGlvbj0nc2hvdycgZGF0YS1wYXNzd29yZC1pZD0nXCIgKyBwYXNzd29yZElkICsgXCInPjxpIGNsYXNzPSdtYXRlcmlhbC1pY29ucyc+cmVtb3ZlX3JlZF9leWU8L2k+PC9idXR0b24+XCIpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdGltZUxlZnQtLTtcbiAgICAgICAgfTtcbiAgICAgICAgdGltZXIoKTtcblxuICAgICAgICBsZXQgdGltZXJJZCA9IHNldEludGVydmFsKHRpbWVyLCAxMDAwKTtcbiAgICB9XG5cblxuICAgIGZ1bmN0aW9uIGZldGNoUGFzc3dvcmRzKGNhbGxiYWNrRG9uZSkge1xuICAgICAgICBjb25zdCB0YWJsZVBhc3N3b3Jkc0JvZHkgPSAkKFwiI3Rib2R5UGFzc3dvcmRzXCIpLFxuICAgICAgICAgICAgdGFibGVBcmNoaXZlZEJvZHkgPSAkKFwiI3Rib2R5QXJjaGl2ZWRQYXNzd29yZHNcIik7XG4gICAgICAgIHJlcXVlc3QoXCJhPXBhc3N3b3JkL3F1ZXJ5QWxsXCIsIGZ1bmN0aW9uIChkYXRhKSB7XG4gICAgICAgICAgICBsZXQgY29udGVudFBhc3N3b3JkcyA9IFwiXCIsXG4gICAgICAgICAgICAgICAgY29udGVudEFyY2hpdmVkUGFzc3dvcmQgPSBcIlwiO1xuICAgICAgICAgICAgaWYgKGRhdGEuc3VjY2Vzcykge1xuICAgICAgICAgICAgICAgICQuZWFjaChkYXRhLmRhdGEsIGZ1bmN0aW9uIChpbmRleCwgaXRlbSkge1xuXG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IGRlc2NyaXB0aW9uID0gaXRlbS5kZXNjcmlwdGlvbi5yYXcgPyBpdGVtLmRlc2NyaXB0aW9uLnNhZmUgOiBcIjxpPk5vbmU8L2k+XCI7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IHVzZXJuYW1lID0gaXRlbS51c2VybmFtZS5yYXcgPyBpdGVtLnVzZXJuYW1lLnNhZmUgOiBcIjxpPk5vbmU8L2k+XCI7XG5cbiAgICAgICAgICAgICAgICAgICAgaWYgKCFpdGVtLmFyY2hpdmVkKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBsZXQgcm93ID0gXCI8dHIgZGF0YS1jb3B5LXBhc3N3b3JkIGRhdGEtcGFzc3dvcmQtaWQ9J1wiICsgaXRlbS5wYXNzd29yZF9pZCArIFwiJyBkYXRhLXZpc2libGU9J3RydWUnIGlkPSdcIiArIGl0ZW0ucGFzc3dvcmRfaWQgKyBcIic+XCI7XG4gICAgICAgICAgICAgICAgICAgICAgICAvLyBQYXNzd29yZHMgcGFnZVxuICAgICAgICAgICAgICAgICAgICAgICAgcm93ICs9IFwiPHRkPjxzcGFuIGNsYXNzPSdmb3JjZS1zZWxlY3Qgbm8tY29udGV4dG1lbnUnPlwiICsgdXNlcm5hbWUgKyBcIjwvc3Bhbj48L3RkPlwiO1xuICAgICAgICAgICAgICAgICAgICAgICAgcm93ICs9IFwiPHRkPjxidXR0b24gY2xhc3M9J2J0biBidG4tZGVmYXVsdCBidG4tZmxhdCBidG4tYmxvY2snIGRhdGEtcGFzc3dvcmQtYWN0aW9uPSdzaG93JyBkYXRhLXBhc3N3b3JkLWlkPSdcIiArIGl0ZW0ucGFzc3dvcmRfaWQgKyBcIic+PGkgY2xhc3M9J21hdGVyaWFsLWljb25zJz5yZW1vdmVfcmVkX2V5ZTwvaT48L2J1dHRvbj48L3RkPlwiO1xuICAgICAgICAgICAgICAgICAgICAgICAgcm93ICs9IFwiPHRkPlwiICsgZGVzY3JpcHRpb24gKyBcIjwvdGQ+XCI7XG4gICAgICAgICAgICAgICAgICAgICAgICByb3cgKz0gXCI8dGQ+XCIgKyBpdGVtLmRhdGVfYWRkZWQucHJldHR5ICsgXCI8L3RkPlwiO1xuICAgICAgICAgICAgICAgICAgICAgICAgcm93ICs9IFwiPHRkPlwiICtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBcIjxidXR0b24gY2xhc3M9J2J0biBidG4tZGVmYXVsdCBidG4tZmxhdCBidG4tc20nIGRhdGEtcGFzc3dvcmQtYWN0aW9uPSdlZGl0JyBkYXRhLXBhc3N3b3JkLWlkPSdcIiArIGl0ZW0ucGFzc3dvcmRfaWQgKyBcIic+XCIgK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwiPGkgY2xhc3M9J21hdGVyaWFsLWljb25zJz5lZGl0PC9pPlwiICtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBcIjwvYnV0dG9uPlwiICtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBcIjxidXR0b24gY2xhc3M9J2J0biBidG4tZGVmYXVsdCBidG4tZmxhdCBidG4tc20nIGRhdGEtcGFzc3dvcmQtYWN0aW9uPSdhcmNoaXZlJyBkYXRhLXBhc3N3b3JkLWlkPSdcIiArIGl0ZW0ucGFzc3dvcmRfaWQgKyBcIic+XCIgK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwiPGkgY2xhc3M9J21hdGVyaWFsLWljb25zJz5hcmNoaXZlPC9pPlwiICtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBcIjwvYnV0dG9uPlwiICtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBcIjwvdGQ+XCI7XG4gICAgICAgICAgICAgICAgICAgICAgICByb3cgKz0gXCI8L3RyPlwiO1xuICAgICAgICAgICAgICAgICAgICAgICAgY29udGVudFBhc3N3b3JkcyArPSByb3c7XG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBsZXQgcm93ID0gXCI8dHIgZGF0YS12aXNpYmxlPSd0cnVlJyBpZD0nXCIgKyBpdGVtLnBhc3N3b3JkX2lkICsgXCInPlwiO1xuICAgICAgICAgICAgICAgICAgICAgICAgLy8gQXJjaGl2ZWQgcGFnZVxuICAgICAgICAgICAgICAgICAgICAgICAgcm93ICs9IFwiPHRkPjxzcGFuIGNsYXNzPSdmb3JjZS1zZWxlY3Qgbm8tY29udGV4dG1lbnUnPiBcIiArIHVzZXJuYW1lICsgXCI8L3NwYW4+PC90ZD5cIjtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJvdyArPSBcIjx0ZD48YnV0dG9uIGNsYXNzPSdidG4gYnRuLWRlZmF1bHQgYnRuLWZsYXQgYnRuLWJsb2NrJyBkaXNhYmxlZD0nZGlzYWJsZWQnPjxpIGNsYXNzPSdtYXRlcmlhbC1pY29ucyc+cmVtb3ZlX3JlZF9leWU8L2k+PC9idXR0b24+PC90ZD5cIjtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJvdyArPSBcIjx0ZCA+XCIgKyBkZXNjcmlwdGlvbiArIFwiPC90ZD5cIjtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJvdyArPSBcIjx0ZD5cIiArIGl0ZW0uZGF0ZV9hcmNoaXZlZC5wcmV0dHkgKyBcIjwvdGQ+XCI7XG4gICAgICAgICAgICAgICAgICAgICAgICByb3cgKz0gXCI8dGQ+PGJ1dHRvbiBjbGFzcz0nYnRuIGJ0bi1kZWZhdWx0IGJ0bi1mbGF0IGJ0bi1zbScgZGF0YS1wYXNzd29yZC1hY3Rpb249J3Jlc3RvcmUnIGRhdGEtcGFzc3dvcmQtaWQ9J1wiICsgaXRlbS5wYXNzd29yZF9pZCArIFwiJz48aSBjbGFzcz0nbWF0ZXJpYWwtaWNvbnMnPnVuYXJjaGl2ZTwvaT48L2J1dHRvbj48YSBjbGFzcz0nYnRuIGJ0bi1kZWZhdWx0IGJ0bi1mbGF0IGJ0bi1zbScgZGF0YS1wYXNzd29yZC1hY3Rpb249J2RlbGV0ZScgZGF0YS1wYXNzd29yZC1pZD0nXCIgKyBpdGVtLnBhc3N3b3JkX2lkICsgXCInPjxpIGNsYXNzPSdtYXRlcmlhbC1pY29ucyc+ZGVsZXRlPC9pPjwvYT48L3RkPlwiO1xuICAgICAgICAgICAgICAgICAgICAgICAgcm93ICs9IFwiPC90cj5cIjtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRlbnRBcmNoaXZlZFBhc3N3b3JkICs9IHJvdztcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBzbmFja2JhcihcIlRoZXJlIGhhcyBiZWVuIGEgcHJvYmxlbSB3aXRoIHRoZSBzZXJ2ZXIuIFBsZWFzZSB0cnkgYWdhaW4gbGF0ZXJcIik7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0YWJsZVBhc3N3b3Jkc0JvZHkuaHRtbChjb250ZW50UGFzc3dvcmRzKTtcbiAgICAgICAgICAgIHRhYmxlQXJjaGl2ZWRCb2R5Lmh0bWwoY29udGVudEFyY2hpdmVkUGFzc3dvcmQpO1xuICAgICAgICAgICAgaWYgKGNhbGxiYWNrRG9uZSlcbiAgICAgICAgICAgICAgICBjYWxsYmFja0RvbmUoZGF0YS5tc2cpO1xuICAgICAgICB9LCBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICB0YWJsZVBhc3N3b3Jkc0JvZHkuaHRtbChcIlwiKTtcbiAgICAgICAgICAgIHNuYWNrYmFyKFwiVGhlcmUgaGFzIGJlZW4gYSBwcm9ibGVtIHdpdGggdGhlIHNlcnZlci4gUGxlYXNlIHRyeSBhZ2FpbiBsYXRlclwiKTtcbiAgICAgICAgICAgIGlmIChjYWxsYmFja0RvbmUpXG4gICAgICAgICAgICAgICAgY2FsbGJhY2tEb25lKGZhbHNlKTtcbiAgICAgICAgfSk7XG5cbiAgICB9XG5cbiAgICBmdW5jdGlvbiBmZXRjaElQTG9nKGNhbGxiYWNrRG9uZSkge1xuICAgICAgICBjb25zdCB0YWJsZUJvZHkgPSAkKFwiI3Rib2R5TG9naW5IaXN0b3J5XCIpO1xuICAgICAgICByZXF1ZXN0KFwiYT1pcGxvZy9xdWVyeUFsbFwiLCBmdW5jdGlvbiAoZGF0YSkge1xuICAgICAgICAgICAgbGV0IGNvbnRlbnQgPSBcIlwiO1xuICAgICAgICAgICAgaWYgKGRhdGEuc3VjY2Vzcykge1xuICAgICAgICAgICAgICAgIGNvbnN0IGpzb25EYXRhID0gZGF0YS5kYXRhO1xuICAgICAgICAgICAgICAgICQuZWFjaChqc29uRGF0YSwgZnVuY3Rpb24gKGluZGV4LCBpdGVtKSB7XG4gICAgICAgICAgICAgICAgICAgIGxldCByb3cgPSBcIjx0cj5cIjtcblxuICAgICAgICAgICAgICAgICAgICByb3cgKz0gXCI8dGQ+PHNwYW4+XCIgKyBpdGVtLmlwICsgXCI8L3NwYW4+PC90ZD5cIjtcbiAgICAgICAgICAgICAgICAgICAgcm93ICs9IFwiPHRkPjxzcGFuPlwiICsgaXRlbS51c2VyX2FnZW50ICsgXCI8L3NwYW4+PC90ZD5cIjtcbiAgICAgICAgICAgICAgICAgICAgcm93ICs9IFwiPHRkPjxzcGFuPlwiICsgaXRlbS5kYXRlLnByZXR0eSArIFwiPC9zcGFuPjwvdGQ+XCI7XG4gICAgICAgICAgICAgICAgICAgIHJvdyArPSBcIjwvdHI+XCI7XG5cbiAgICAgICAgICAgICAgICAgICAgY29udGVudCArPSByb3c7XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIHNuYWNrYmFyKFwiVGhlcmUgaGFzIGJlZW4gYSBwcm9ibGVtIHdpdGggdGhlIHNlcnZlci4gUGxlYXNlIHRyeSBhZ2FpbiBsYXRlclwiKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHRhYmxlQm9keS5odG1sKGNvbnRlbnQpO1xuICAgICAgICAgICAgaWYgKGNhbGxiYWNrRG9uZSlcbiAgICAgICAgICAgICAgICBjYWxsYmFja0RvbmUoKTtcbiAgICAgICAgfSwgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgdGFibGVCb2R5Lmh0bWwoXCJcIik7XG4gICAgICAgICAgICBzbmFja2JhcihcIlRoZXJlIGhhcyBiZWVuIGEgcHJvYmxlbSB3aXRoIHRoZSBzZXJ2ZXIuIFBsZWFzZSB0cnkgYWdhaW4gbGF0ZXJcIik7XG4gICAgICAgICAgICBpZiAoY2FsbGJhY2tEb25lKVxuICAgICAgICAgICAgICAgIGNhbGxiYWNrRG9uZShmYWxzZSk7XG4gICAgICAgIH0pO1xuICAgIH1cblxuICAgIHJldHVybiB7XG4gICAgICAgIHNldE9wdGlvbjogZnVuY3Rpb24gKG9wdGlvbiwgdmFsdWUpIHtcbiAgICAgICAgICAgIGlmIChvcHRpb25zW29wdGlvbl0gPT0gbnVsbClcbiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgICAgICBvcHRpb25zW29wdGlvbl0gPSB2YWx1ZTtcbiAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICB9XG4gICAgfVxufSkoKTtcbiJdfQ==
